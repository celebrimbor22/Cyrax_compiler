Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> S
Rule 1     S -> VARIABLES METODOS PRINCIPAL
Rule 2     VARIABLES -> AUXV
Rule 3     VARIABLES -> <empty>
Rule 4     AUXV -> TIPO AUX2 PUNTOCOMA AUXV
Rule 5     AUXV -> TIPO ID VECTOR PUNTOCOMA AUXV
Rule 6     AUXV -> TIPO AUX2 PUNTOCOMA
Rule 7     AUXV -> TIPO ID VECTOR PUNTOCOMA
Rule 8     VECTOR -> LCOR CONSTANTE RCOR
Rule 9     VECTOR -> LCOR CONSTANTE RCOR LCOR CONSTANTE RCOR
Rule 10    AUX2 -> ID COMA AUX2
Rule 11    AUX2 -> ID
Rule 12    SPE -> ASSIGNMENT
Rule 13    SPE -> CALLFUNCTION
Rule 14    SPE -> IFCALL
Rule 15    SPE -> WHILECALL
Rule 16    SPE -> DOWHILECALL
Rule 17    SPE -> FORCALL
Rule 18    SPE -> WRITECALL
Rule 19    SPE -> READCALL
Rule 20    IFCALL -> IF E AUXIF1 DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA
Rule 21    IFAUX -> ELSE AUXF2 DOSPUNTOS B END PUNTOCOMA
Rule 22    IFAUX -> <empty>
Rule 23    AUXF3 -> <empty>
Rule 24    AUXF2 -> <empty>
Rule 25    AUXIF1 -> <empty>
Rule 26    WHILECALL -> WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA
Rule 27    WHILEAUX1 -> <empty>
Rule 28    WHILEAUX -> <empty>
Rule 29    WHILEAUX2 -> <empty>
Rule 30    DOWHILECALL -> DO DOSPUNTOS DOAUX B LOOP E DOAUX1 END PUNTOCOMA
Rule 31    DOAUX -> <empty>
Rule 32    DOAUX1 -> <empty>
Rule 33    FORCALL -> FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA
Rule 34    FAUX -> <empty>
Rule 35    INCREMENTO -> ID PLUSPLUS
Rule 36    FSAL -> <empty>
Rule 37    IDAUX -> ID
Rule 38    IFOR -> <empty>
Rule 39    FDIR -> <empty>
Rule 40    WRITECALL -> WRITE LPAREN AUXESCRIBE RPAREN PUNTOCOMA
Rule 41    AUXESCRIBE -> E
Rule 42    AUXESCRIBE -> STRING
Rule 43    READCALL -> ID IGUAL READ LPAREN RPAREN PUNTOCOMA
Rule 44    CALLFUNCTION -> ID LPAREN RPAREN PUNTOCOMA
Rule 45    ASSIGNMENT -> ASIGANCION
Rule 46    ASSIGNMENT -> ASIGPLUS
Rule 47    ASSIGNMENT -> ASIGMIN
Rule 48    ASSIGNMENT -> ASIGVE
Rule 49    ASIGVE -> DIMENSION IGUAL E PUNTOCOMA
Rule 50    ASIGANCION -> ID IGUAL E PUNTOCOMA
Rule 51    ASIGPLUS -> ID PLUSPLUS PUNTOCOMA
Rule 52    ASIGMIN -> ID MINMIN PUNTOCOMA
Rule 53    E -> E PLUS term
Rule 54    E -> E MINUS term
Rule 55    E -> E OR term
Rule 56    E -> term
Rule 57    term -> term MULT factor
Rule 58    term -> term DIVIDE factor
Rule 59    term -> term MOD factor
Rule 60    term -> term AND factor
Rule 61    term -> factor
Rule 62    factor -> YONE
Rule 63    factor -> LPAREN E RPAREN
Rule 64    factor -> YONE MAYOR YONE
Rule 65    factor -> YONE MENOR YONE
Rule 66    factor -> YONE MAYORIGUAL YONE
Rule 67    factor -> YONE MENORIGUAL YONE
Rule 68    factor -> YONE EQUAL YONE
Rule 69    factor -> YONE NOTEQUAL YONE
Rule 70    YONE -> DIMENSION
Rule 71    YONE -> CONDOUBLE
Rule 72    YONE -> ID
Rule 73    YONE -> CONSTANTE
Rule 74    DIMENSION -> ID LCOR LOCAL RCOR LCOR LOCAL RCOR
Rule 75    DIMENSION -> ID LCOR LOCAL RCOR
Rule 76    LOCAL -> ID
Rule 77    LOCAL -> CONSTANTE
Rule 78    PRINCIPAL -> MAIN LPAREN RPAREN DOSPUNTOS MAINAUX B ENDF FINMAIN
Rule 79    MAINAUX -> <empty>
Rule 80    FINMAIN -> PUNTOCOMA
Rule 81    B -> SPE B
Rule 82    B -> SPE
Rule 83    METODOS -> MEA
Rule 84    METODOS -> <empty>
Rule 85    MEA -> VOID MEAIN LPAREN RPAREN DOSPUNTOS B ENDF PUNTOCOMA FINMEA MEA
Rule 86    MEA -> VOID MEAIN LPAREN RPAREN DOSPUNTOS B ENDF PUNTOCOMA FINMEA
Rule 87    MEAIN -> ID
Rule 88    FINMEA -> <empty>
Rule 89    TIPO -> INT
Rule 90    TIPO -> DOUBLE
Rule 91    TIPO -> BOOL

Terminals, with rules where they appear

AND                  : 60
BOOL                 : 91
COMA                 : 10
CONDOUBLE            : 71
CONSTANTE            : 8 9 9 73 77
DIVIDE               : 58
DO                   : 30
DOSPUNTOS            : 20 21 26 30 33 78 85 86
DOUBLE               : 90
ELSE                 : 21
END                  : 20 21 26 30 33
ENDF                 : 78 85 86
EQUAL                : 68
FOR                  : 33
ID                   : 5 7 10 11 35 37 43 44 50 51 52 72 74 75 76 87
IF                   : 20
IGUAL                : 33 43 49 50
INT                  : 89
LCOR                 : 8 9 9 74 74 75
LOOP                 : 30
LPAREN               : 40 43 44 63 78 85 86
MAIN                 : 78
MAYOR                : 64
MAYORIGUAL           : 66
MENOR                : 65
MENORIGUAL           : 67
MINMIN               : 52
MINUS                : 54
MOD                  : 59
MULT                 : 57
NOTEQUAL             : 69
OR                   : 55
PLUS                 : 53
PLUSPLUS             : 35 51
PUNTOCOMA            : 4 5 6 7 20 21 26 30 33 33 33 40 43 44 49 50 51 52 80 85 86
RCOR                 : 8 9 9 74 74 75
READ                 : 43
RPAREN               : 40 43 44 63 78 85 86
STRING               : 42
VOID                 : 85 86
WHILE                : 26
WRITE                : 40
error                : 

Nonterminals, with rules where they appear

ASIGANCION           : 45
ASIGMIN              : 47
ASIGPLUS             : 46
ASIGVE               : 48
ASSIGNMENT           : 12
AUX2                 : 4 6 10
AUXESCRIBE           : 40
AUXF2                : 21
AUXF3                : 20
AUXIF1               : 20
AUXV                 : 2 4 5
B                    : 20 21 26 30 33 78 81 85 86
CALLFUNCTION         : 13
DIMENSION            : 49 70
DOAUX                : 30
DOAUX1               : 30
DOWHILECALL          : 16
E                    : 20 26 30 33 41 49 50 53 54 55 63
FAUX                 : 33
FDIR                 : 33
FINMAIN              : 78
FINMEA               : 85 86
FORCALL              : 17
FSAL                 : 33
IDAUX                : 33
IFAUX                : 20
IFCALL               : 14
IFOR                 : 33
INCREMENTO           : 33
LOCAL                : 74 74 75
MAINAUX              : 78
MEA                  : 83 85
MEAIN                : 85 86
METODOS              : 1
PRINCIPAL            : 1
READCALL             : 19
S                    : 0
SPE                  : 81 82
TIPO                 : 4 5 6 7
VARIABLES            : 1
VECTOR               : 5 7
WHILEAUX             : 26
WHILEAUX1            : 26
WHILEAUX2            : 26
WHILECALL            : 15
WRITECALL            : 18
YONE                 : 33 62 64 64 65 65 66 66 67 67 68 68 69 69
factor               : 57 58 59 60 61
term                 : 53 54 55 56 57 58 59 60

Parsing method: LALR

state 0

    (0) S' -> . S
    (1) S -> . VARIABLES METODOS PRINCIPAL
    (2) VARIABLES -> . AUXV
    (3) VARIABLES -> .
    (4) AUXV -> . TIPO AUX2 PUNTOCOMA AUXV
    (5) AUXV -> . TIPO ID VECTOR PUNTOCOMA AUXV
    (6) AUXV -> . TIPO AUX2 PUNTOCOMA
    (7) AUXV -> . TIPO ID VECTOR PUNTOCOMA
    (89) TIPO -> . INT
    (90) TIPO -> . DOUBLE
    (91) TIPO -> . BOOL

    VOID            reduce using rule 3 (VARIABLES -> .)
    MAIN            reduce using rule 3 (VARIABLES -> .)
    INT             shift and go to state 5
    DOUBLE          shift and go to state 6
    BOOL            shift and go to state 7

    S                              shift and go to state 1
    VARIABLES                      shift and go to state 2
    AUXV                           shift and go to state 3
    TIPO                           shift and go to state 4

state 1

    (0) S' -> S .



state 2

    (1) S -> VARIABLES . METODOS PRINCIPAL
    (83) METODOS -> . MEA
    (84) METODOS -> .
    (85) MEA -> . VOID MEAIN LPAREN RPAREN DOSPUNTOS B ENDF PUNTOCOMA FINMEA MEA
    (86) MEA -> . VOID MEAIN LPAREN RPAREN DOSPUNTOS B ENDF PUNTOCOMA FINMEA

    MAIN            reduce using rule 84 (METODOS -> .)
    VOID            shift and go to state 10

    METODOS                        shift and go to state 8
    MEA                            shift and go to state 9

state 3

    (2) VARIABLES -> AUXV .

    VOID            reduce using rule 2 (VARIABLES -> AUXV .)
    MAIN            reduce using rule 2 (VARIABLES -> AUXV .)


state 4

    (4) AUXV -> TIPO . AUX2 PUNTOCOMA AUXV
    (5) AUXV -> TIPO . ID VECTOR PUNTOCOMA AUXV
    (6) AUXV -> TIPO . AUX2 PUNTOCOMA
    (7) AUXV -> TIPO . ID VECTOR PUNTOCOMA
    (10) AUX2 -> . ID COMA AUX2
    (11) AUX2 -> . ID

    ID              shift and go to state 12

    AUX2                           shift and go to state 11

state 5

    (89) TIPO -> INT .

    ID              reduce using rule 89 (TIPO -> INT .)


state 6

    (90) TIPO -> DOUBLE .

    ID              reduce using rule 90 (TIPO -> DOUBLE .)


state 7

    (91) TIPO -> BOOL .

    ID              reduce using rule 91 (TIPO -> BOOL .)


state 8

    (1) S -> VARIABLES METODOS . PRINCIPAL
    (78) PRINCIPAL -> . MAIN LPAREN RPAREN DOSPUNTOS MAINAUX B ENDF FINMAIN

    MAIN            shift and go to state 14

    PRINCIPAL                      shift and go to state 13

state 9

    (83) METODOS -> MEA .

    MAIN            reduce using rule 83 (METODOS -> MEA .)


state 10

    (85) MEA -> VOID . MEAIN LPAREN RPAREN DOSPUNTOS B ENDF PUNTOCOMA FINMEA MEA
    (86) MEA -> VOID . MEAIN LPAREN RPAREN DOSPUNTOS B ENDF PUNTOCOMA FINMEA
    (87) MEAIN -> . ID

    ID              shift and go to state 16

    MEAIN                          shift and go to state 15

state 11

    (4) AUXV -> TIPO AUX2 . PUNTOCOMA AUXV
    (6) AUXV -> TIPO AUX2 . PUNTOCOMA

    PUNTOCOMA       shift and go to state 17


state 12

    (5) AUXV -> TIPO ID . VECTOR PUNTOCOMA AUXV
    (7) AUXV -> TIPO ID . VECTOR PUNTOCOMA
    (10) AUX2 -> ID . COMA AUX2
    (11) AUX2 -> ID .
    (8) VECTOR -> . LCOR CONSTANTE RCOR
    (9) VECTOR -> . LCOR CONSTANTE RCOR LCOR CONSTANTE RCOR

    COMA            shift and go to state 19
    PUNTOCOMA       reduce using rule 11 (AUX2 -> ID .)
    LCOR            shift and go to state 20

    VECTOR                         shift and go to state 18

state 13

    (1) S -> VARIABLES METODOS PRINCIPAL .

    $end            reduce using rule 1 (S -> VARIABLES METODOS PRINCIPAL .)


state 14

    (78) PRINCIPAL -> MAIN . LPAREN RPAREN DOSPUNTOS MAINAUX B ENDF FINMAIN

    LPAREN          shift and go to state 21


state 15

    (85) MEA -> VOID MEAIN . LPAREN RPAREN DOSPUNTOS B ENDF PUNTOCOMA FINMEA MEA
    (86) MEA -> VOID MEAIN . LPAREN RPAREN DOSPUNTOS B ENDF PUNTOCOMA FINMEA

    LPAREN          shift and go to state 22


state 16

    (87) MEAIN -> ID .

    LPAREN          reduce using rule 87 (MEAIN -> ID .)


state 17

    (4) AUXV -> TIPO AUX2 PUNTOCOMA . AUXV
    (6) AUXV -> TIPO AUX2 PUNTOCOMA .
    (4) AUXV -> . TIPO AUX2 PUNTOCOMA AUXV
    (5) AUXV -> . TIPO ID VECTOR PUNTOCOMA AUXV
    (6) AUXV -> . TIPO AUX2 PUNTOCOMA
    (7) AUXV -> . TIPO ID VECTOR PUNTOCOMA
    (89) TIPO -> . INT
    (90) TIPO -> . DOUBLE
    (91) TIPO -> . BOOL

    VOID            reduce using rule 6 (AUXV -> TIPO AUX2 PUNTOCOMA .)
    MAIN            reduce using rule 6 (AUXV -> TIPO AUX2 PUNTOCOMA .)
    INT             shift and go to state 5
    DOUBLE          shift and go to state 6
    BOOL            shift and go to state 7

    TIPO                           shift and go to state 4
    AUXV                           shift and go to state 23

state 18

    (5) AUXV -> TIPO ID VECTOR . PUNTOCOMA AUXV
    (7) AUXV -> TIPO ID VECTOR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 24


state 19

    (10) AUX2 -> ID COMA . AUX2
    (10) AUX2 -> . ID COMA AUX2
    (11) AUX2 -> . ID

    ID              shift and go to state 25

    AUX2                           shift and go to state 26

state 20

    (8) VECTOR -> LCOR . CONSTANTE RCOR
    (9) VECTOR -> LCOR . CONSTANTE RCOR LCOR CONSTANTE RCOR

    CONSTANTE       shift and go to state 27


state 21

    (78) PRINCIPAL -> MAIN LPAREN . RPAREN DOSPUNTOS MAINAUX B ENDF FINMAIN

    RPAREN          shift and go to state 28


state 22

    (85) MEA -> VOID MEAIN LPAREN . RPAREN DOSPUNTOS B ENDF PUNTOCOMA FINMEA MEA
    (86) MEA -> VOID MEAIN LPAREN . RPAREN DOSPUNTOS B ENDF PUNTOCOMA FINMEA

    RPAREN          shift and go to state 29


state 23

    (4) AUXV -> TIPO AUX2 PUNTOCOMA AUXV .

    VOID            reduce using rule 4 (AUXV -> TIPO AUX2 PUNTOCOMA AUXV .)
    MAIN            reduce using rule 4 (AUXV -> TIPO AUX2 PUNTOCOMA AUXV .)


state 24

    (5) AUXV -> TIPO ID VECTOR PUNTOCOMA . AUXV
    (7) AUXV -> TIPO ID VECTOR PUNTOCOMA .
    (4) AUXV -> . TIPO AUX2 PUNTOCOMA AUXV
    (5) AUXV -> . TIPO ID VECTOR PUNTOCOMA AUXV
    (6) AUXV -> . TIPO AUX2 PUNTOCOMA
    (7) AUXV -> . TIPO ID VECTOR PUNTOCOMA
    (89) TIPO -> . INT
    (90) TIPO -> . DOUBLE
    (91) TIPO -> . BOOL

    VOID            reduce using rule 7 (AUXV -> TIPO ID VECTOR PUNTOCOMA .)
    MAIN            reduce using rule 7 (AUXV -> TIPO ID VECTOR PUNTOCOMA .)
    INT             shift and go to state 5
    DOUBLE          shift and go to state 6
    BOOL            shift and go to state 7

    TIPO                           shift and go to state 4
    AUXV                           shift and go to state 30

state 25

    (10) AUX2 -> ID . COMA AUX2
    (11) AUX2 -> ID .

    COMA            shift and go to state 19
    PUNTOCOMA       reduce using rule 11 (AUX2 -> ID .)


state 26

    (10) AUX2 -> ID COMA AUX2 .

    PUNTOCOMA       reduce using rule 10 (AUX2 -> ID COMA AUX2 .)


state 27

    (8) VECTOR -> LCOR CONSTANTE . RCOR
    (9) VECTOR -> LCOR CONSTANTE . RCOR LCOR CONSTANTE RCOR

    RCOR            shift and go to state 31


state 28

    (78) PRINCIPAL -> MAIN LPAREN RPAREN . DOSPUNTOS MAINAUX B ENDF FINMAIN

    DOSPUNTOS       shift and go to state 32


state 29

    (85) MEA -> VOID MEAIN LPAREN RPAREN . DOSPUNTOS B ENDF PUNTOCOMA FINMEA MEA
    (86) MEA -> VOID MEAIN LPAREN RPAREN . DOSPUNTOS B ENDF PUNTOCOMA FINMEA

    DOSPUNTOS       shift and go to state 33


state 30

    (5) AUXV -> TIPO ID VECTOR PUNTOCOMA AUXV .

    VOID            reduce using rule 5 (AUXV -> TIPO ID VECTOR PUNTOCOMA AUXV .)
    MAIN            reduce using rule 5 (AUXV -> TIPO ID VECTOR PUNTOCOMA AUXV .)


state 31

    (8) VECTOR -> LCOR CONSTANTE RCOR .
    (9) VECTOR -> LCOR CONSTANTE RCOR . LCOR CONSTANTE RCOR

    PUNTOCOMA       reduce using rule 8 (VECTOR -> LCOR CONSTANTE RCOR .)
    LCOR            shift and go to state 34


state 32

    (78) PRINCIPAL -> MAIN LPAREN RPAREN DOSPUNTOS . MAINAUX B ENDF FINMAIN
    (79) MAINAUX -> .

    ID              reduce using rule 79 (MAINAUX -> .)
    IF              reduce using rule 79 (MAINAUX -> .)
    WHILE           reduce using rule 79 (MAINAUX -> .)
    DO              reduce using rule 79 (MAINAUX -> .)
    FOR             reduce using rule 79 (MAINAUX -> .)
    WRITE           reduce using rule 79 (MAINAUX -> .)

    MAINAUX                        shift and go to state 35

state 33

    (85) MEA -> VOID MEAIN LPAREN RPAREN DOSPUNTOS . B ENDF PUNTOCOMA FINMEA MEA
    (86) MEA -> VOID MEAIN LPAREN RPAREN DOSPUNTOS . B ENDF PUNTOCOMA FINMEA
    (81) B -> . SPE B
    (82) B -> . SPE
    (12) SPE -> . ASSIGNMENT
    (13) SPE -> . CALLFUNCTION
    (14) SPE -> . IFCALL
    (15) SPE -> . WHILECALL
    (16) SPE -> . DOWHILECALL
    (17) SPE -> . FORCALL
    (18) SPE -> . WRITECALL
    (19) SPE -> . READCALL
    (45) ASSIGNMENT -> . ASIGANCION
    (46) ASSIGNMENT -> . ASIGPLUS
    (47) ASSIGNMENT -> . ASIGMIN
    (48) ASSIGNMENT -> . ASIGVE
    (44) CALLFUNCTION -> . ID LPAREN RPAREN PUNTOCOMA
    (20) IFCALL -> . IF E AUXIF1 DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA
    (26) WHILECALL -> . WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA
    (30) DOWHILECALL -> . DO DOSPUNTOS DOAUX B LOOP E DOAUX1 END PUNTOCOMA
    (33) FORCALL -> . FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA
    (40) WRITECALL -> . WRITE LPAREN AUXESCRIBE RPAREN PUNTOCOMA
    (43) READCALL -> . ID IGUAL READ LPAREN RPAREN PUNTOCOMA
    (50) ASIGANCION -> . ID IGUAL E PUNTOCOMA
    (51) ASIGPLUS -> . ID PLUSPLUS PUNTOCOMA
    (52) ASIGMIN -> . ID MINMIN PUNTOCOMA
    (49) ASIGVE -> . DIMENSION IGUAL E PUNTOCOMA
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    ID              shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 52
    DO              shift and go to state 53
    FOR             shift and go to state 54
    WRITE           shift and go to state 55

    B                              shift and go to state 36
    SPE                            shift and go to state 37
    ASSIGNMENT                     shift and go to state 38
    CALLFUNCTION                   shift and go to state 39
    IFCALL                         shift and go to state 40
    WHILECALL                      shift and go to state 41
    DOWHILECALL                    shift and go to state 42
    FORCALL                        shift and go to state 43
    WRITECALL                      shift and go to state 44
    READCALL                       shift and go to state 45
    ASIGANCION                     shift and go to state 46
    ASIGPLUS                       shift and go to state 47
    ASIGMIN                        shift and go to state 48
    ASIGVE                         shift and go to state 49
    DIMENSION                      shift and go to state 56

state 34

    (9) VECTOR -> LCOR CONSTANTE RCOR LCOR . CONSTANTE RCOR

    CONSTANTE       shift and go to state 57


state 35

    (78) PRINCIPAL -> MAIN LPAREN RPAREN DOSPUNTOS MAINAUX . B ENDF FINMAIN
    (81) B -> . SPE B
    (82) B -> . SPE
    (12) SPE -> . ASSIGNMENT
    (13) SPE -> . CALLFUNCTION
    (14) SPE -> . IFCALL
    (15) SPE -> . WHILECALL
    (16) SPE -> . DOWHILECALL
    (17) SPE -> . FORCALL
    (18) SPE -> . WRITECALL
    (19) SPE -> . READCALL
    (45) ASSIGNMENT -> . ASIGANCION
    (46) ASSIGNMENT -> . ASIGPLUS
    (47) ASSIGNMENT -> . ASIGMIN
    (48) ASSIGNMENT -> . ASIGVE
    (44) CALLFUNCTION -> . ID LPAREN RPAREN PUNTOCOMA
    (20) IFCALL -> . IF E AUXIF1 DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA
    (26) WHILECALL -> . WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA
    (30) DOWHILECALL -> . DO DOSPUNTOS DOAUX B LOOP E DOAUX1 END PUNTOCOMA
    (33) FORCALL -> . FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA
    (40) WRITECALL -> . WRITE LPAREN AUXESCRIBE RPAREN PUNTOCOMA
    (43) READCALL -> . ID IGUAL READ LPAREN RPAREN PUNTOCOMA
    (50) ASIGANCION -> . ID IGUAL E PUNTOCOMA
    (51) ASIGPLUS -> . ID PLUSPLUS PUNTOCOMA
    (52) ASIGMIN -> . ID MINMIN PUNTOCOMA
    (49) ASIGVE -> . DIMENSION IGUAL E PUNTOCOMA
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    ID              shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 52
    DO              shift and go to state 53
    FOR             shift and go to state 54
    WRITE           shift and go to state 55

    B                              shift and go to state 58
    SPE                            shift and go to state 37
    ASSIGNMENT                     shift and go to state 38
    CALLFUNCTION                   shift and go to state 39
    IFCALL                         shift and go to state 40
    WHILECALL                      shift and go to state 41
    DOWHILECALL                    shift and go to state 42
    FORCALL                        shift and go to state 43
    WRITECALL                      shift and go to state 44
    READCALL                       shift and go to state 45
    ASIGANCION                     shift and go to state 46
    ASIGPLUS                       shift and go to state 47
    ASIGMIN                        shift and go to state 48
    ASIGVE                         shift and go to state 49
    DIMENSION                      shift and go to state 56

state 36

    (85) MEA -> VOID MEAIN LPAREN RPAREN DOSPUNTOS B . ENDF PUNTOCOMA FINMEA MEA
    (86) MEA -> VOID MEAIN LPAREN RPAREN DOSPUNTOS B . ENDF PUNTOCOMA FINMEA

    ENDF            shift and go to state 59


state 37

    (81) B -> SPE . B
    (82) B -> SPE .
    (81) B -> . SPE B
    (82) B -> . SPE
    (12) SPE -> . ASSIGNMENT
    (13) SPE -> . CALLFUNCTION
    (14) SPE -> . IFCALL
    (15) SPE -> . WHILECALL
    (16) SPE -> . DOWHILECALL
    (17) SPE -> . FORCALL
    (18) SPE -> . WRITECALL
    (19) SPE -> . READCALL
    (45) ASSIGNMENT -> . ASIGANCION
    (46) ASSIGNMENT -> . ASIGPLUS
    (47) ASSIGNMENT -> . ASIGMIN
    (48) ASSIGNMENT -> . ASIGVE
    (44) CALLFUNCTION -> . ID LPAREN RPAREN PUNTOCOMA
    (20) IFCALL -> . IF E AUXIF1 DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA
    (26) WHILECALL -> . WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA
    (30) DOWHILECALL -> . DO DOSPUNTOS DOAUX B LOOP E DOAUX1 END PUNTOCOMA
    (33) FORCALL -> . FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA
    (40) WRITECALL -> . WRITE LPAREN AUXESCRIBE RPAREN PUNTOCOMA
    (43) READCALL -> . ID IGUAL READ LPAREN RPAREN PUNTOCOMA
    (50) ASIGANCION -> . ID IGUAL E PUNTOCOMA
    (51) ASIGPLUS -> . ID PLUSPLUS PUNTOCOMA
    (52) ASIGMIN -> . ID MINMIN PUNTOCOMA
    (49) ASIGVE -> . DIMENSION IGUAL E PUNTOCOMA
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    ENDF            reduce using rule 82 (B -> SPE .)
    LOOP            reduce using rule 82 (B -> SPE .)
    ELSE            reduce using rule 82 (B -> SPE .)
    END             reduce using rule 82 (B -> SPE .)
    ID              shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 52
    DO              shift and go to state 53
    FOR             shift and go to state 54
    WRITE           shift and go to state 55

    SPE                            shift and go to state 37
    B                              shift and go to state 60
    ASSIGNMENT                     shift and go to state 38
    CALLFUNCTION                   shift and go to state 39
    IFCALL                         shift and go to state 40
    WHILECALL                      shift and go to state 41
    DOWHILECALL                    shift and go to state 42
    FORCALL                        shift and go to state 43
    WRITECALL                      shift and go to state 44
    READCALL                       shift and go to state 45
    ASIGANCION                     shift and go to state 46
    ASIGPLUS                       shift and go to state 47
    ASIGMIN                        shift and go to state 48
    ASIGVE                         shift and go to state 49
    DIMENSION                      shift and go to state 56

state 38

    (12) SPE -> ASSIGNMENT .

    ID              reduce using rule 12 (SPE -> ASSIGNMENT .)
    IF              reduce using rule 12 (SPE -> ASSIGNMENT .)
    WHILE           reduce using rule 12 (SPE -> ASSIGNMENT .)
    DO              reduce using rule 12 (SPE -> ASSIGNMENT .)
    FOR             reduce using rule 12 (SPE -> ASSIGNMENT .)
    WRITE           reduce using rule 12 (SPE -> ASSIGNMENT .)
    ENDF            reduce using rule 12 (SPE -> ASSIGNMENT .)
    LOOP            reduce using rule 12 (SPE -> ASSIGNMENT .)
    ELSE            reduce using rule 12 (SPE -> ASSIGNMENT .)
    END             reduce using rule 12 (SPE -> ASSIGNMENT .)


state 39

    (13) SPE -> CALLFUNCTION .

    ID              reduce using rule 13 (SPE -> CALLFUNCTION .)
    IF              reduce using rule 13 (SPE -> CALLFUNCTION .)
    WHILE           reduce using rule 13 (SPE -> CALLFUNCTION .)
    DO              reduce using rule 13 (SPE -> CALLFUNCTION .)
    FOR             reduce using rule 13 (SPE -> CALLFUNCTION .)
    WRITE           reduce using rule 13 (SPE -> CALLFUNCTION .)
    ENDF            reduce using rule 13 (SPE -> CALLFUNCTION .)
    LOOP            reduce using rule 13 (SPE -> CALLFUNCTION .)
    ELSE            reduce using rule 13 (SPE -> CALLFUNCTION .)
    END             reduce using rule 13 (SPE -> CALLFUNCTION .)


state 40

    (14) SPE -> IFCALL .

    ID              reduce using rule 14 (SPE -> IFCALL .)
    IF              reduce using rule 14 (SPE -> IFCALL .)
    WHILE           reduce using rule 14 (SPE -> IFCALL .)
    DO              reduce using rule 14 (SPE -> IFCALL .)
    FOR             reduce using rule 14 (SPE -> IFCALL .)
    WRITE           reduce using rule 14 (SPE -> IFCALL .)
    ENDF            reduce using rule 14 (SPE -> IFCALL .)
    LOOP            reduce using rule 14 (SPE -> IFCALL .)
    ELSE            reduce using rule 14 (SPE -> IFCALL .)
    END             reduce using rule 14 (SPE -> IFCALL .)


state 41

    (15) SPE -> WHILECALL .

    ID              reduce using rule 15 (SPE -> WHILECALL .)
    IF              reduce using rule 15 (SPE -> WHILECALL .)
    WHILE           reduce using rule 15 (SPE -> WHILECALL .)
    DO              reduce using rule 15 (SPE -> WHILECALL .)
    FOR             reduce using rule 15 (SPE -> WHILECALL .)
    WRITE           reduce using rule 15 (SPE -> WHILECALL .)
    ENDF            reduce using rule 15 (SPE -> WHILECALL .)
    LOOP            reduce using rule 15 (SPE -> WHILECALL .)
    ELSE            reduce using rule 15 (SPE -> WHILECALL .)
    END             reduce using rule 15 (SPE -> WHILECALL .)


state 42

    (16) SPE -> DOWHILECALL .

    ID              reduce using rule 16 (SPE -> DOWHILECALL .)
    IF              reduce using rule 16 (SPE -> DOWHILECALL .)
    WHILE           reduce using rule 16 (SPE -> DOWHILECALL .)
    DO              reduce using rule 16 (SPE -> DOWHILECALL .)
    FOR             reduce using rule 16 (SPE -> DOWHILECALL .)
    WRITE           reduce using rule 16 (SPE -> DOWHILECALL .)
    ENDF            reduce using rule 16 (SPE -> DOWHILECALL .)
    LOOP            reduce using rule 16 (SPE -> DOWHILECALL .)
    ELSE            reduce using rule 16 (SPE -> DOWHILECALL .)
    END             reduce using rule 16 (SPE -> DOWHILECALL .)


state 43

    (17) SPE -> FORCALL .

    ID              reduce using rule 17 (SPE -> FORCALL .)
    IF              reduce using rule 17 (SPE -> FORCALL .)
    WHILE           reduce using rule 17 (SPE -> FORCALL .)
    DO              reduce using rule 17 (SPE -> FORCALL .)
    FOR             reduce using rule 17 (SPE -> FORCALL .)
    WRITE           reduce using rule 17 (SPE -> FORCALL .)
    ENDF            reduce using rule 17 (SPE -> FORCALL .)
    LOOP            reduce using rule 17 (SPE -> FORCALL .)
    ELSE            reduce using rule 17 (SPE -> FORCALL .)
    END             reduce using rule 17 (SPE -> FORCALL .)


state 44

    (18) SPE -> WRITECALL .

    ID              reduce using rule 18 (SPE -> WRITECALL .)
    IF              reduce using rule 18 (SPE -> WRITECALL .)
    WHILE           reduce using rule 18 (SPE -> WRITECALL .)
    DO              reduce using rule 18 (SPE -> WRITECALL .)
    FOR             reduce using rule 18 (SPE -> WRITECALL .)
    WRITE           reduce using rule 18 (SPE -> WRITECALL .)
    ENDF            reduce using rule 18 (SPE -> WRITECALL .)
    LOOP            reduce using rule 18 (SPE -> WRITECALL .)
    ELSE            reduce using rule 18 (SPE -> WRITECALL .)
    END             reduce using rule 18 (SPE -> WRITECALL .)


state 45

    (19) SPE -> READCALL .

    ID              reduce using rule 19 (SPE -> READCALL .)
    IF              reduce using rule 19 (SPE -> READCALL .)
    WHILE           reduce using rule 19 (SPE -> READCALL .)
    DO              reduce using rule 19 (SPE -> READCALL .)
    FOR             reduce using rule 19 (SPE -> READCALL .)
    WRITE           reduce using rule 19 (SPE -> READCALL .)
    ENDF            reduce using rule 19 (SPE -> READCALL .)
    LOOP            reduce using rule 19 (SPE -> READCALL .)
    ELSE            reduce using rule 19 (SPE -> READCALL .)
    END             reduce using rule 19 (SPE -> READCALL .)


state 46

    (45) ASSIGNMENT -> ASIGANCION .

    ID              reduce using rule 45 (ASSIGNMENT -> ASIGANCION .)
    IF              reduce using rule 45 (ASSIGNMENT -> ASIGANCION .)
    WHILE           reduce using rule 45 (ASSIGNMENT -> ASIGANCION .)
    DO              reduce using rule 45 (ASSIGNMENT -> ASIGANCION .)
    FOR             reduce using rule 45 (ASSIGNMENT -> ASIGANCION .)
    WRITE           reduce using rule 45 (ASSIGNMENT -> ASIGANCION .)
    ENDF            reduce using rule 45 (ASSIGNMENT -> ASIGANCION .)
    LOOP            reduce using rule 45 (ASSIGNMENT -> ASIGANCION .)
    ELSE            reduce using rule 45 (ASSIGNMENT -> ASIGANCION .)
    END             reduce using rule 45 (ASSIGNMENT -> ASIGANCION .)


state 47

    (46) ASSIGNMENT -> ASIGPLUS .

    ID              reduce using rule 46 (ASSIGNMENT -> ASIGPLUS .)
    IF              reduce using rule 46 (ASSIGNMENT -> ASIGPLUS .)
    WHILE           reduce using rule 46 (ASSIGNMENT -> ASIGPLUS .)
    DO              reduce using rule 46 (ASSIGNMENT -> ASIGPLUS .)
    FOR             reduce using rule 46 (ASSIGNMENT -> ASIGPLUS .)
    WRITE           reduce using rule 46 (ASSIGNMENT -> ASIGPLUS .)
    ENDF            reduce using rule 46 (ASSIGNMENT -> ASIGPLUS .)
    LOOP            reduce using rule 46 (ASSIGNMENT -> ASIGPLUS .)
    ELSE            reduce using rule 46 (ASSIGNMENT -> ASIGPLUS .)
    END             reduce using rule 46 (ASSIGNMENT -> ASIGPLUS .)


state 48

    (47) ASSIGNMENT -> ASIGMIN .

    ID              reduce using rule 47 (ASSIGNMENT -> ASIGMIN .)
    IF              reduce using rule 47 (ASSIGNMENT -> ASIGMIN .)
    WHILE           reduce using rule 47 (ASSIGNMENT -> ASIGMIN .)
    DO              reduce using rule 47 (ASSIGNMENT -> ASIGMIN .)
    FOR             reduce using rule 47 (ASSIGNMENT -> ASIGMIN .)
    WRITE           reduce using rule 47 (ASSIGNMENT -> ASIGMIN .)
    ENDF            reduce using rule 47 (ASSIGNMENT -> ASIGMIN .)
    LOOP            reduce using rule 47 (ASSIGNMENT -> ASIGMIN .)
    ELSE            reduce using rule 47 (ASSIGNMENT -> ASIGMIN .)
    END             reduce using rule 47 (ASSIGNMENT -> ASIGMIN .)


state 49

    (48) ASSIGNMENT -> ASIGVE .

    ID              reduce using rule 48 (ASSIGNMENT -> ASIGVE .)
    IF              reduce using rule 48 (ASSIGNMENT -> ASIGVE .)
    WHILE           reduce using rule 48 (ASSIGNMENT -> ASIGVE .)
    DO              reduce using rule 48 (ASSIGNMENT -> ASIGVE .)
    FOR             reduce using rule 48 (ASSIGNMENT -> ASIGVE .)
    WRITE           reduce using rule 48 (ASSIGNMENT -> ASIGVE .)
    ENDF            reduce using rule 48 (ASSIGNMENT -> ASIGVE .)
    LOOP            reduce using rule 48 (ASSIGNMENT -> ASIGVE .)
    ELSE            reduce using rule 48 (ASSIGNMENT -> ASIGVE .)
    END             reduce using rule 48 (ASSIGNMENT -> ASIGVE .)


state 50

    (44) CALLFUNCTION -> ID . LPAREN RPAREN PUNTOCOMA
    (43) READCALL -> ID . IGUAL READ LPAREN RPAREN PUNTOCOMA
    (50) ASIGANCION -> ID . IGUAL E PUNTOCOMA
    (51) ASIGPLUS -> ID . PLUSPLUS PUNTOCOMA
    (52) ASIGMIN -> ID . MINMIN PUNTOCOMA
    (74) DIMENSION -> ID . LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> ID . LCOR LOCAL RCOR

    LPAREN          shift and go to state 61
    IGUAL           shift and go to state 62
    PLUSPLUS        shift and go to state 63
    MINMIN          shift and go to state 64
    LCOR            shift and go to state 65


state 51

    (20) IFCALL -> IF . E AUXIF1 DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA
    (53) E -> . E PLUS term
    (54) E -> . E MINUS term
    (55) E -> . E OR term
    (56) E -> . term
    (57) term -> . term MULT factor
    (58) term -> . term DIVIDE factor
    (59) term -> . term MOD factor
    (60) term -> . term AND factor
    (61) term -> . factor
    (62) factor -> . YONE
    (63) factor -> . LPAREN E RPAREN
    (64) factor -> . YONE MAYOR YONE
    (65) factor -> . YONE MENOR YONE
    (66) factor -> . YONE MAYORIGUAL YONE
    (67) factor -> . YONE MENORIGUAL YONE
    (68) factor -> . YONE EQUAL YONE
    (69) factor -> . YONE NOTEQUAL YONE
    (70) YONE -> . DIMENSION
    (71) YONE -> . CONDOUBLE
    (72) YONE -> . ID
    (73) YONE -> . CONSTANTE
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    LPAREN          shift and go to state 70
    CONDOUBLE       shift and go to state 72
    ID              shift and go to state 73
    CONSTANTE       shift and go to state 74

    E                              shift and go to state 66
    term                           shift and go to state 67
    factor                         shift and go to state 68
    YONE                           shift and go to state 69
    DIMENSION                      shift and go to state 71

state 52

    (26) WHILECALL -> WHILE . WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA
    (28) WHILEAUX -> .

    LPAREN          reduce using rule 28 (WHILEAUX -> .)
    CONDOUBLE       reduce using rule 28 (WHILEAUX -> .)
    ID              reduce using rule 28 (WHILEAUX -> .)
    CONSTANTE       reduce using rule 28 (WHILEAUX -> .)

    WHILEAUX                       shift and go to state 75

state 53

    (30) DOWHILECALL -> DO . DOSPUNTOS DOAUX B LOOP E DOAUX1 END PUNTOCOMA

    DOSPUNTOS       shift and go to state 76


state 54

    (33) FORCALL -> FOR . IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA
    (37) IDAUX -> . ID

    ID              shift and go to state 78

    IDAUX                          shift and go to state 77

state 55

    (40) WRITECALL -> WRITE . LPAREN AUXESCRIBE RPAREN PUNTOCOMA

    LPAREN          shift and go to state 79


state 56

    (49) ASIGVE -> DIMENSION . IGUAL E PUNTOCOMA

    IGUAL           shift and go to state 80


state 57

    (9) VECTOR -> LCOR CONSTANTE RCOR LCOR CONSTANTE . RCOR

    RCOR            shift and go to state 81


state 58

    (78) PRINCIPAL -> MAIN LPAREN RPAREN DOSPUNTOS MAINAUX B . ENDF FINMAIN

    ENDF            shift and go to state 82


state 59

    (85) MEA -> VOID MEAIN LPAREN RPAREN DOSPUNTOS B ENDF . PUNTOCOMA FINMEA MEA
    (86) MEA -> VOID MEAIN LPAREN RPAREN DOSPUNTOS B ENDF . PUNTOCOMA FINMEA

    PUNTOCOMA       shift and go to state 83


state 60

    (81) B -> SPE B .

    ENDF            reduce using rule 81 (B -> SPE B .)
    LOOP            reduce using rule 81 (B -> SPE B .)
    ELSE            reduce using rule 81 (B -> SPE B .)
    END             reduce using rule 81 (B -> SPE B .)


state 61

    (44) CALLFUNCTION -> ID LPAREN . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 84


state 62

    (43) READCALL -> ID IGUAL . READ LPAREN RPAREN PUNTOCOMA
    (50) ASIGANCION -> ID IGUAL . E PUNTOCOMA
    (53) E -> . E PLUS term
    (54) E -> . E MINUS term
    (55) E -> . E OR term
    (56) E -> . term
    (57) term -> . term MULT factor
    (58) term -> . term DIVIDE factor
    (59) term -> . term MOD factor
    (60) term -> . term AND factor
    (61) term -> . factor
    (62) factor -> . YONE
    (63) factor -> . LPAREN E RPAREN
    (64) factor -> . YONE MAYOR YONE
    (65) factor -> . YONE MENOR YONE
    (66) factor -> . YONE MAYORIGUAL YONE
    (67) factor -> . YONE MENORIGUAL YONE
    (68) factor -> . YONE EQUAL YONE
    (69) factor -> . YONE NOTEQUAL YONE
    (70) YONE -> . DIMENSION
    (71) YONE -> . CONDOUBLE
    (72) YONE -> . ID
    (73) YONE -> . CONSTANTE
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    READ            shift and go to state 85
    LPAREN          shift and go to state 70
    CONDOUBLE       shift and go to state 72
    ID              shift and go to state 73
    CONSTANTE       shift and go to state 74

    E                              shift and go to state 86
    term                           shift and go to state 67
    factor                         shift and go to state 68
    YONE                           shift and go to state 69
    DIMENSION                      shift and go to state 71

state 63

    (51) ASIGPLUS -> ID PLUSPLUS . PUNTOCOMA

    PUNTOCOMA       shift and go to state 87


state 64

    (52) ASIGMIN -> ID MINMIN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 88


state 65

    (74) DIMENSION -> ID LCOR . LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> ID LCOR . LOCAL RCOR
    (76) LOCAL -> . ID
    (77) LOCAL -> . CONSTANTE

    ID              shift and go to state 89
    CONSTANTE       shift and go to state 91

    LOCAL                          shift and go to state 90

state 66

    (20) IFCALL -> IF E . AUXIF1 DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA
    (53) E -> E . PLUS term
    (54) E -> E . MINUS term
    (55) E -> E . OR term
    (25) AUXIF1 -> .

    PLUS            shift and go to state 93
    MINUS           shift and go to state 94
    OR              shift and go to state 95
    DOSPUNTOS       reduce using rule 25 (AUXIF1 -> .)

    AUXIF1                         shift and go to state 92

state 67

    (56) E -> term .
    (57) term -> term . MULT factor
    (58) term -> term . DIVIDE factor
    (59) term -> term . MOD factor
    (60) term -> term . AND factor

    PLUS            reduce using rule 56 (E -> term .)
    MINUS           reduce using rule 56 (E -> term .)
    OR              reduce using rule 56 (E -> term .)
    DOSPUNTOS       reduce using rule 56 (E -> term .)
    PUNTOCOMA       reduce using rule 56 (E -> term .)
    RPAREN          reduce using rule 56 (E -> term .)
    END             reduce using rule 56 (E -> term .)
    MULT            shift and go to state 96
    DIVIDE          shift and go to state 97
    MOD             shift and go to state 98
    AND             shift and go to state 99


state 68

    (61) term -> factor .

    MULT            reduce using rule 61 (term -> factor .)
    DIVIDE          reduce using rule 61 (term -> factor .)
    MOD             reduce using rule 61 (term -> factor .)
    AND             reduce using rule 61 (term -> factor .)
    PLUS            reduce using rule 61 (term -> factor .)
    MINUS           reduce using rule 61 (term -> factor .)
    OR              reduce using rule 61 (term -> factor .)
    DOSPUNTOS       reduce using rule 61 (term -> factor .)
    PUNTOCOMA       reduce using rule 61 (term -> factor .)
    RPAREN          reduce using rule 61 (term -> factor .)
    END             reduce using rule 61 (term -> factor .)


state 69

    (62) factor -> YONE .
    (64) factor -> YONE . MAYOR YONE
    (65) factor -> YONE . MENOR YONE
    (66) factor -> YONE . MAYORIGUAL YONE
    (67) factor -> YONE . MENORIGUAL YONE
    (68) factor -> YONE . EQUAL YONE
    (69) factor -> YONE . NOTEQUAL YONE

    MULT            reduce using rule 62 (factor -> YONE .)
    DIVIDE          reduce using rule 62 (factor -> YONE .)
    MOD             reduce using rule 62 (factor -> YONE .)
    AND             reduce using rule 62 (factor -> YONE .)
    PLUS            reduce using rule 62 (factor -> YONE .)
    MINUS           reduce using rule 62 (factor -> YONE .)
    OR              reduce using rule 62 (factor -> YONE .)
    DOSPUNTOS       reduce using rule 62 (factor -> YONE .)
    PUNTOCOMA       reduce using rule 62 (factor -> YONE .)
    RPAREN          reduce using rule 62 (factor -> YONE .)
    END             reduce using rule 62 (factor -> YONE .)
    MAYOR           shift and go to state 100
    MENOR           shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    EQUAL           shift and go to state 104
    NOTEQUAL        shift and go to state 105


state 70

    (63) factor -> LPAREN . E RPAREN
    (53) E -> . E PLUS term
    (54) E -> . E MINUS term
    (55) E -> . E OR term
    (56) E -> . term
    (57) term -> . term MULT factor
    (58) term -> . term DIVIDE factor
    (59) term -> . term MOD factor
    (60) term -> . term AND factor
    (61) term -> . factor
    (62) factor -> . YONE
    (63) factor -> . LPAREN E RPAREN
    (64) factor -> . YONE MAYOR YONE
    (65) factor -> . YONE MENOR YONE
    (66) factor -> . YONE MAYORIGUAL YONE
    (67) factor -> . YONE MENORIGUAL YONE
    (68) factor -> . YONE EQUAL YONE
    (69) factor -> . YONE NOTEQUAL YONE
    (70) YONE -> . DIMENSION
    (71) YONE -> . CONDOUBLE
    (72) YONE -> . ID
    (73) YONE -> . CONSTANTE
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    LPAREN          shift and go to state 70
    CONDOUBLE       shift and go to state 72
    ID              shift and go to state 73
    CONSTANTE       shift and go to state 74

    E                              shift and go to state 106
    term                           shift and go to state 67
    factor                         shift and go to state 68
    YONE                           shift and go to state 69
    DIMENSION                      shift and go to state 71

state 71

    (70) YONE -> DIMENSION .

    MAYOR           reduce using rule 70 (YONE -> DIMENSION .)
    MENOR           reduce using rule 70 (YONE -> DIMENSION .)
    MAYORIGUAL      reduce using rule 70 (YONE -> DIMENSION .)
    MENORIGUAL      reduce using rule 70 (YONE -> DIMENSION .)
    EQUAL           reduce using rule 70 (YONE -> DIMENSION .)
    NOTEQUAL        reduce using rule 70 (YONE -> DIMENSION .)
    MULT            reduce using rule 70 (YONE -> DIMENSION .)
    DIVIDE          reduce using rule 70 (YONE -> DIMENSION .)
    MOD             reduce using rule 70 (YONE -> DIMENSION .)
    AND             reduce using rule 70 (YONE -> DIMENSION .)
    PLUS            reduce using rule 70 (YONE -> DIMENSION .)
    MINUS           reduce using rule 70 (YONE -> DIMENSION .)
    OR              reduce using rule 70 (YONE -> DIMENSION .)
    DOSPUNTOS       reduce using rule 70 (YONE -> DIMENSION .)
    PUNTOCOMA       reduce using rule 70 (YONE -> DIMENSION .)
    RPAREN          reduce using rule 70 (YONE -> DIMENSION .)
    END             reduce using rule 70 (YONE -> DIMENSION .)


state 72

    (71) YONE -> CONDOUBLE .

    MAYOR           reduce using rule 71 (YONE -> CONDOUBLE .)
    MENOR           reduce using rule 71 (YONE -> CONDOUBLE .)
    MAYORIGUAL      reduce using rule 71 (YONE -> CONDOUBLE .)
    MENORIGUAL      reduce using rule 71 (YONE -> CONDOUBLE .)
    EQUAL           reduce using rule 71 (YONE -> CONDOUBLE .)
    NOTEQUAL        reduce using rule 71 (YONE -> CONDOUBLE .)
    MULT            reduce using rule 71 (YONE -> CONDOUBLE .)
    DIVIDE          reduce using rule 71 (YONE -> CONDOUBLE .)
    MOD             reduce using rule 71 (YONE -> CONDOUBLE .)
    AND             reduce using rule 71 (YONE -> CONDOUBLE .)
    PLUS            reduce using rule 71 (YONE -> CONDOUBLE .)
    MINUS           reduce using rule 71 (YONE -> CONDOUBLE .)
    OR              reduce using rule 71 (YONE -> CONDOUBLE .)
    DOSPUNTOS       reduce using rule 71 (YONE -> CONDOUBLE .)
    PUNTOCOMA       reduce using rule 71 (YONE -> CONDOUBLE .)
    RPAREN          reduce using rule 71 (YONE -> CONDOUBLE .)
    END             reduce using rule 71 (YONE -> CONDOUBLE .)


state 73

    (72) YONE -> ID .
    (74) DIMENSION -> ID . LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> ID . LCOR LOCAL RCOR

    MAYOR           reduce using rule 72 (YONE -> ID .)
    MENOR           reduce using rule 72 (YONE -> ID .)
    MAYORIGUAL      reduce using rule 72 (YONE -> ID .)
    MENORIGUAL      reduce using rule 72 (YONE -> ID .)
    EQUAL           reduce using rule 72 (YONE -> ID .)
    NOTEQUAL        reduce using rule 72 (YONE -> ID .)
    MULT            reduce using rule 72 (YONE -> ID .)
    DIVIDE          reduce using rule 72 (YONE -> ID .)
    MOD             reduce using rule 72 (YONE -> ID .)
    AND             reduce using rule 72 (YONE -> ID .)
    PLUS            reduce using rule 72 (YONE -> ID .)
    MINUS           reduce using rule 72 (YONE -> ID .)
    OR              reduce using rule 72 (YONE -> ID .)
    DOSPUNTOS       reduce using rule 72 (YONE -> ID .)
    PUNTOCOMA       reduce using rule 72 (YONE -> ID .)
    RPAREN          reduce using rule 72 (YONE -> ID .)
    END             reduce using rule 72 (YONE -> ID .)
    LCOR            shift and go to state 65


state 74

    (73) YONE -> CONSTANTE .

    MAYOR           reduce using rule 73 (YONE -> CONSTANTE .)
    MENOR           reduce using rule 73 (YONE -> CONSTANTE .)
    MAYORIGUAL      reduce using rule 73 (YONE -> CONSTANTE .)
    MENORIGUAL      reduce using rule 73 (YONE -> CONSTANTE .)
    EQUAL           reduce using rule 73 (YONE -> CONSTANTE .)
    NOTEQUAL        reduce using rule 73 (YONE -> CONSTANTE .)
    MULT            reduce using rule 73 (YONE -> CONSTANTE .)
    DIVIDE          reduce using rule 73 (YONE -> CONSTANTE .)
    MOD             reduce using rule 73 (YONE -> CONSTANTE .)
    AND             reduce using rule 73 (YONE -> CONSTANTE .)
    PLUS            reduce using rule 73 (YONE -> CONSTANTE .)
    MINUS           reduce using rule 73 (YONE -> CONSTANTE .)
    OR              reduce using rule 73 (YONE -> CONSTANTE .)
    DOSPUNTOS       reduce using rule 73 (YONE -> CONSTANTE .)
    PUNTOCOMA       reduce using rule 73 (YONE -> CONSTANTE .)
    RPAREN          reduce using rule 73 (YONE -> CONSTANTE .)
    END             reduce using rule 73 (YONE -> CONSTANTE .)


state 75

    (26) WHILECALL -> WHILE WHILEAUX . E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA
    (53) E -> . E PLUS term
    (54) E -> . E MINUS term
    (55) E -> . E OR term
    (56) E -> . term
    (57) term -> . term MULT factor
    (58) term -> . term DIVIDE factor
    (59) term -> . term MOD factor
    (60) term -> . term AND factor
    (61) term -> . factor
    (62) factor -> . YONE
    (63) factor -> . LPAREN E RPAREN
    (64) factor -> . YONE MAYOR YONE
    (65) factor -> . YONE MENOR YONE
    (66) factor -> . YONE MAYORIGUAL YONE
    (67) factor -> . YONE MENORIGUAL YONE
    (68) factor -> . YONE EQUAL YONE
    (69) factor -> . YONE NOTEQUAL YONE
    (70) YONE -> . DIMENSION
    (71) YONE -> . CONDOUBLE
    (72) YONE -> . ID
    (73) YONE -> . CONSTANTE
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    LPAREN          shift and go to state 70
    CONDOUBLE       shift and go to state 72
    ID              shift and go to state 73
    CONSTANTE       shift and go to state 74

    E                              shift and go to state 107
    term                           shift and go to state 67
    factor                         shift and go to state 68
    YONE                           shift and go to state 69
    DIMENSION                      shift and go to state 71

state 76

    (30) DOWHILECALL -> DO DOSPUNTOS . DOAUX B LOOP E DOAUX1 END PUNTOCOMA
    (31) DOAUX -> .

    ID              reduce using rule 31 (DOAUX -> .)
    IF              reduce using rule 31 (DOAUX -> .)
    WHILE           reduce using rule 31 (DOAUX -> .)
    DO              reduce using rule 31 (DOAUX -> .)
    FOR             reduce using rule 31 (DOAUX -> .)
    WRITE           reduce using rule 31 (DOAUX -> .)

    DOAUX                          shift and go to state 108

state 77

    (33) FORCALL -> FOR IDAUX . IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA

    IGUAL           shift and go to state 109


state 78

    (37) IDAUX -> ID .

    IGUAL           reduce using rule 37 (IDAUX -> ID .)


state 79

    (40) WRITECALL -> WRITE LPAREN . AUXESCRIBE RPAREN PUNTOCOMA
    (41) AUXESCRIBE -> . E
    (42) AUXESCRIBE -> . STRING
    (53) E -> . E PLUS term
    (54) E -> . E MINUS term
    (55) E -> . E OR term
    (56) E -> . term
    (57) term -> . term MULT factor
    (58) term -> . term DIVIDE factor
    (59) term -> . term MOD factor
    (60) term -> . term AND factor
    (61) term -> . factor
    (62) factor -> . YONE
    (63) factor -> . LPAREN E RPAREN
    (64) factor -> . YONE MAYOR YONE
    (65) factor -> . YONE MENOR YONE
    (66) factor -> . YONE MAYORIGUAL YONE
    (67) factor -> . YONE MENORIGUAL YONE
    (68) factor -> . YONE EQUAL YONE
    (69) factor -> . YONE NOTEQUAL YONE
    (70) YONE -> . DIMENSION
    (71) YONE -> . CONDOUBLE
    (72) YONE -> . ID
    (73) YONE -> . CONSTANTE
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    STRING          shift and go to state 112
    LPAREN          shift and go to state 70
    CONDOUBLE       shift and go to state 72
    ID              shift and go to state 73
    CONSTANTE       shift and go to state 74

    AUXESCRIBE                     shift and go to state 110
    E                              shift and go to state 111
    term                           shift and go to state 67
    factor                         shift and go to state 68
    YONE                           shift and go to state 69
    DIMENSION                      shift and go to state 71

state 80

    (49) ASIGVE -> DIMENSION IGUAL . E PUNTOCOMA
    (53) E -> . E PLUS term
    (54) E -> . E MINUS term
    (55) E -> . E OR term
    (56) E -> . term
    (57) term -> . term MULT factor
    (58) term -> . term DIVIDE factor
    (59) term -> . term MOD factor
    (60) term -> . term AND factor
    (61) term -> . factor
    (62) factor -> . YONE
    (63) factor -> . LPAREN E RPAREN
    (64) factor -> . YONE MAYOR YONE
    (65) factor -> . YONE MENOR YONE
    (66) factor -> . YONE MAYORIGUAL YONE
    (67) factor -> . YONE MENORIGUAL YONE
    (68) factor -> . YONE EQUAL YONE
    (69) factor -> . YONE NOTEQUAL YONE
    (70) YONE -> . DIMENSION
    (71) YONE -> . CONDOUBLE
    (72) YONE -> . ID
    (73) YONE -> . CONSTANTE
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    LPAREN          shift and go to state 70
    CONDOUBLE       shift and go to state 72
    ID              shift and go to state 73
    CONSTANTE       shift and go to state 74

    DIMENSION                      shift and go to state 71
    E                              shift and go to state 113
    term                           shift and go to state 67
    factor                         shift and go to state 68
    YONE                           shift and go to state 69

state 81

    (9) VECTOR -> LCOR CONSTANTE RCOR LCOR CONSTANTE RCOR .

    PUNTOCOMA       reduce using rule 9 (VECTOR -> LCOR CONSTANTE RCOR LCOR CONSTANTE RCOR .)


state 82

    (78) PRINCIPAL -> MAIN LPAREN RPAREN DOSPUNTOS MAINAUX B ENDF . FINMAIN
    (80) FINMAIN -> . PUNTOCOMA

    PUNTOCOMA       shift and go to state 115

    FINMAIN                        shift and go to state 114

state 83

    (85) MEA -> VOID MEAIN LPAREN RPAREN DOSPUNTOS B ENDF PUNTOCOMA . FINMEA MEA
    (86) MEA -> VOID MEAIN LPAREN RPAREN DOSPUNTOS B ENDF PUNTOCOMA . FINMEA
    (88) FINMEA -> .

    VOID            reduce using rule 88 (FINMEA -> .)
    MAIN            reduce using rule 88 (FINMEA -> .)

    FINMEA                         shift and go to state 116

state 84

    (44) CALLFUNCTION -> ID LPAREN RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 117


state 85

    (43) READCALL -> ID IGUAL READ . LPAREN RPAREN PUNTOCOMA

    LPAREN          shift and go to state 118


state 86

    (50) ASIGANCION -> ID IGUAL E . PUNTOCOMA
    (53) E -> E . PLUS term
    (54) E -> E . MINUS term
    (55) E -> E . OR term

    PUNTOCOMA       shift and go to state 119
    PLUS            shift and go to state 93
    MINUS           shift and go to state 94
    OR              shift and go to state 95


state 87

    (51) ASIGPLUS -> ID PLUSPLUS PUNTOCOMA .

    ID              reduce using rule 51 (ASIGPLUS -> ID PLUSPLUS PUNTOCOMA .)
    IF              reduce using rule 51 (ASIGPLUS -> ID PLUSPLUS PUNTOCOMA .)
    WHILE           reduce using rule 51 (ASIGPLUS -> ID PLUSPLUS PUNTOCOMA .)
    DO              reduce using rule 51 (ASIGPLUS -> ID PLUSPLUS PUNTOCOMA .)
    FOR             reduce using rule 51 (ASIGPLUS -> ID PLUSPLUS PUNTOCOMA .)
    WRITE           reduce using rule 51 (ASIGPLUS -> ID PLUSPLUS PUNTOCOMA .)
    ENDF            reduce using rule 51 (ASIGPLUS -> ID PLUSPLUS PUNTOCOMA .)
    LOOP            reduce using rule 51 (ASIGPLUS -> ID PLUSPLUS PUNTOCOMA .)
    ELSE            reduce using rule 51 (ASIGPLUS -> ID PLUSPLUS PUNTOCOMA .)
    END             reduce using rule 51 (ASIGPLUS -> ID PLUSPLUS PUNTOCOMA .)


state 88

    (52) ASIGMIN -> ID MINMIN PUNTOCOMA .

    ID              reduce using rule 52 (ASIGMIN -> ID MINMIN PUNTOCOMA .)
    IF              reduce using rule 52 (ASIGMIN -> ID MINMIN PUNTOCOMA .)
    WHILE           reduce using rule 52 (ASIGMIN -> ID MINMIN PUNTOCOMA .)
    DO              reduce using rule 52 (ASIGMIN -> ID MINMIN PUNTOCOMA .)
    FOR             reduce using rule 52 (ASIGMIN -> ID MINMIN PUNTOCOMA .)
    WRITE           reduce using rule 52 (ASIGMIN -> ID MINMIN PUNTOCOMA .)
    ENDF            reduce using rule 52 (ASIGMIN -> ID MINMIN PUNTOCOMA .)
    LOOP            reduce using rule 52 (ASIGMIN -> ID MINMIN PUNTOCOMA .)
    ELSE            reduce using rule 52 (ASIGMIN -> ID MINMIN PUNTOCOMA .)
    END             reduce using rule 52 (ASIGMIN -> ID MINMIN PUNTOCOMA .)


state 89

    (76) LOCAL -> ID .

    RCOR            reduce using rule 76 (LOCAL -> ID .)


state 90

    (74) DIMENSION -> ID LCOR LOCAL . RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> ID LCOR LOCAL . RCOR

    RCOR            shift and go to state 120


state 91

    (77) LOCAL -> CONSTANTE .

    RCOR            reduce using rule 77 (LOCAL -> CONSTANTE .)


state 92

    (20) IFCALL -> IF E AUXIF1 . DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA

    DOSPUNTOS       shift and go to state 121


state 93

    (53) E -> E PLUS . term
    (57) term -> . term MULT factor
    (58) term -> . term DIVIDE factor
    (59) term -> . term MOD factor
    (60) term -> . term AND factor
    (61) term -> . factor
    (62) factor -> . YONE
    (63) factor -> . LPAREN E RPAREN
    (64) factor -> . YONE MAYOR YONE
    (65) factor -> . YONE MENOR YONE
    (66) factor -> . YONE MAYORIGUAL YONE
    (67) factor -> . YONE MENORIGUAL YONE
    (68) factor -> . YONE EQUAL YONE
    (69) factor -> . YONE NOTEQUAL YONE
    (70) YONE -> . DIMENSION
    (71) YONE -> . CONDOUBLE
    (72) YONE -> . ID
    (73) YONE -> . CONSTANTE
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    LPAREN          shift and go to state 70
    CONDOUBLE       shift and go to state 72
    ID              shift and go to state 73
    CONSTANTE       shift and go to state 74

    term                           shift and go to state 122
    factor                         shift and go to state 68
    YONE                           shift and go to state 69
    DIMENSION                      shift and go to state 71

state 94

    (54) E -> E MINUS . term
    (57) term -> . term MULT factor
    (58) term -> . term DIVIDE factor
    (59) term -> . term MOD factor
    (60) term -> . term AND factor
    (61) term -> . factor
    (62) factor -> . YONE
    (63) factor -> . LPAREN E RPAREN
    (64) factor -> . YONE MAYOR YONE
    (65) factor -> . YONE MENOR YONE
    (66) factor -> . YONE MAYORIGUAL YONE
    (67) factor -> . YONE MENORIGUAL YONE
    (68) factor -> . YONE EQUAL YONE
    (69) factor -> . YONE NOTEQUAL YONE
    (70) YONE -> . DIMENSION
    (71) YONE -> . CONDOUBLE
    (72) YONE -> . ID
    (73) YONE -> . CONSTANTE
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    LPAREN          shift and go to state 70
    CONDOUBLE       shift and go to state 72
    ID              shift and go to state 73
    CONSTANTE       shift and go to state 74

    term                           shift and go to state 123
    factor                         shift and go to state 68
    YONE                           shift and go to state 69
    DIMENSION                      shift and go to state 71

state 95

    (55) E -> E OR . term
    (57) term -> . term MULT factor
    (58) term -> . term DIVIDE factor
    (59) term -> . term MOD factor
    (60) term -> . term AND factor
    (61) term -> . factor
    (62) factor -> . YONE
    (63) factor -> . LPAREN E RPAREN
    (64) factor -> . YONE MAYOR YONE
    (65) factor -> . YONE MENOR YONE
    (66) factor -> . YONE MAYORIGUAL YONE
    (67) factor -> . YONE MENORIGUAL YONE
    (68) factor -> . YONE EQUAL YONE
    (69) factor -> . YONE NOTEQUAL YONE
    (70) YONE -> . DIMENSION
    (71) YONE -> . CONDOUBLE
    (72) YONE -> . ID
    (73) YONE -> . CONSTANTE
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    LPAREN          shift and go to state 70
    CONDOUBLE       shift and go to state 72
    ID              shift and go to state 73
    CONSTANTE       shift and go to state 74

    term                           shift and go to state 124
    factor                         shift and go to state 68
    YONE                           shift and go to state 69
    DIMENSION                      shift and go to state 71

state 96

    (57) term -> term MULT . factor
    (62) factor -> . YONE
    (63) factor -> . LPAREN E RPAREN
    (64) factor -> . YONE MAYOR YONE
    (65) factor -> . YONE MENOR YONE
    (66) factor -> . YONE MAYORIGUAL YONE
    (67) factor -> . YONE MENORIGUAL YONE
    (68) factor -> . YONE EQUAL YONE
    (69) factor -> . YONE NOTEQUAL YONE
    (70) YONE -> . DIMENSION
    (71) YONE -> . CONDOUBLE
    (72) YONE -> . ID
    (73) YONE -> . CONSTANTE
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    LPAREN          shift and go to state 70
    CONDOUBLE       shift and go to state 72
    ID              shift and go to state 73
    CONSTANTE       shift and go to state 74

    factor                         shift and go to state 125
    YONE                           shift and go to state 69
    DIMENSION                      shift and go to state 71

state 97

    (58) term -> term DIVIDE . factor
    (62) factor -> . YONE
    (63) factor -> . LPAREN E RPAREN
    (64) factor -> . YONE MAYOR YONE
    (65) factor -> . YONE MENOR YONE
    (66) factor -> . YONE MAYORIGUAL YONE
    (67) factor -> . YONE MENORIGUAL YONE
    (68) factor -> . YONE EQUAL YONE
    (69) factor -> . YONE NOTEQUAL YONE
    (70) YONE -> . DIMENSION
    (71) YONE -> . CONDOUBLE
    (72) YONE -> . ID
    (73) YONE -> . CONSTANTE
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    LPAREN          shift and go to state 70
    CONDOUBLE       shift and go to state 72
    ID              shift and go to state 73
    CONSTANTE       shift and go to state 74

    factor                         shift and go to state 126
    YONE                           shift and go to state 69
    DIMENSION                      shift and go to state 71

state 98

    (59) term -> term MOD . factor
    (62) factor -> . YONE
    (63) factor -> . LPAREN E RPAREN
    (64) factor -> . YONE MAYOR YONE
    (65) factor -> . YONE MENOR YONE
    (66) factor -> . YONE MAYORIGUAL YONE
    (67) factor -> . YONE MENORIGUAL YONE
    (68) factor -> . YONE EQUAL YONE
    (69) factor -> . YONE NOTEQUAL YONE
    (70) YONE -> . DIMENSION
    (71) YONE -> . CONDOUBLE
    (72) YONE -> . ID
    (73) YONE -> . CONSTANTE
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    LPAREN          shift and go to state 70
    CONDOUBLE       shift and go to state 72
    ID              shift and go to state 73
    CONSTANTE       shift and go to state 74

    factor                         shift and go to state 127
    YONE                           shift and go to state 69
    DIMENSION                      shift and go to state 71

state 99

    (60) term -> term AND . factor
    (62) factor -> . YONE
    (63) factor -> . LPAREN E RPAREN
    (64) factor -> . YONE MAYOR YONE
    (65) factor -> . YONE MENOR YONE
    (66) factor -> . YONE MAYORIGUAL YONE
    (67) factor -> . YONE MENORIGUAL YONE
    (68) factor -> . YONE EQUAL YONE
    (69) factor -> . YONE NOTEQUAL YONE
    (70) YONE -> . DIMENSION
    (71) YONE -> . CONDOUBLE
    (72) YONE -> . ID
    (73) YONE -> . CONSTANTE
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    LPAREN          shift and go to state 70
    CONDOUBLE       shift and go to state 72
    ID              shift and go to state 73
    CONSTANTE       shift and go to state 74

    factor                         shift and go to state 128
    YONE                           shift and go to state 69
    DIMENSION                      shift and go to state 71

state 100

    (64) factor -> YONE MAYOR . YONE
    (70) YONE -> . DIMENSION
    (71) YONE -> . CONDOUBLE
    (72) YONE -> . ID
    (73) YONE -> . CONSTANTE
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    CONDOUBLE       shift and go to state 72
    ID              shift and go to state 73
    CONSTANTE       shift and go to state 74

    YONE                           shift and go to state 129
    DIMENSION                      shift and go to state 71

state 101

    (65) factor -> YONE MENOR . YONE
    (70) YONE -> . DIMENSION
    (71) YONE -> . CONDOUBLE
    (72) YONE -> . ID
    (73) YONE -> . CONSTANTE
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    CONDOUBLE       shift and go to state 72
    ID              shift and go to state 73
    CONSTANTE       shift and go to state 74

    YONE                           shift and go to state 130
    DIMENSION                      shift and go to state 71

state 102

    (66) factor -> YONE MAYORIGUAL . YONE
    (70) YONE -> . DIMENSION
    (71) YONE -> . CONDOUBLE
    (72) YONE -> . ID
    (73) YONE -> . CONSTANTE
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    CONDOUBLE       shift and go to state 72
    ID              shift and go to state 73
    CONSTANTE       shift and go to state 74

    YONE                           shift and go to state 131
    DIMENSION                      shift and go to state 71

state 103

    (67) factor -> YONE MENORIGUAL . YONE
    (70) YONE -> . DIMENSION
    (71) YONE -> . CONDOUBLE
    (72) YONE -> . ID
    (73) YONE -> . CONSTANTE
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    CONDOUBLE       shift and go to state 72
    ID              shift and go to state 73
    CONSTANTE       shift and go to state 74

    YONE                           shift and go to state 132
    DIMENSION                      shift and go to state 71

state 104

    (68) factor -> YONE EQUAL . YONE
    (70) YONE -> . DIMENSION
    (71) YONE -> . CONDOUBLE
    (72) YONE -> . ID
    (73) YONE -> . CONSTANTE
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    CONDOUBLE       shift and go to state 72
    ID              shift and go to state 73
    CONSTANTE       shift and go to state 74

    YONE                           shift and go to state 133
    DIMENSION                      shift and go to state 71

state 105

    (69) factor -> YONE NOTEQUAL . YONE
    (70) YONE -> . DIMENSION
    (71) YONE -> . CONDOUBLE
    (72) YONE -> . ID
    (73) YONE -> . CONSTANTE
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    CONDOUBLE       shift and go to state 72
    ID              shift and go to state 73
    CONSTANTE       shift and go to state 74

    YONE                           shift and go to state 134
    DIMENSION                      shift and go to state 71

state 106

    (63) factor -> LPAREN E . RPAREN
    (53) E -> E . PLUS term
    (54) E -> E . MINUS term
    (55) E -> E . OR term

    RPAREN          shift and go to state 135
    PLUS            shift and go to state 93
    MINUS           shift and go to state 94
    OR              shift and go to state 95


state 107

    (26) WHILECALL -> WHILE WHILEAUX E . WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA
    (53) E -> E . PLUS term
    (54) E -> E . MINUS term
    (55) E -> E . OR term
    (27) WHILEAUX1 -> .

    PLUS            shift and go to state 93
    MINUS           shift and go to state 94
    OR              shift and go to state 95
    DOSPUNTOS       reduce using rule 27 (WHILEAUX1 -> .)

    WHILEAUX1                      shift and go to state 136

state 108

    (30) DOWHILECALL -> DO DOSPUNTOS DOAUX . B LOOP E DOAUX1 END PUNTOCOMA
    (81) B -> . SPE B
    (82) B -> . SPE
    (12) SPE -> . ASSIGNMENT
    (13) SPE -> . CALLFUNCTION
    (14) SPE -> . IFCALL
    (15) SPE -> . WHILECALL
    (16) SPE -> . DOWHILECALL
    (17) SPE -> . FORCALL
    (18) SPE -> . WRITECALL
    (19) SPE -> . READCALL
    (45) ASSIGNMENT -> . ASIGANCION
    (46) ASSIGNMENT -> . ASIGPLUS
    (47) ASSIGNMENT -> . ASIGMIN
    (48) ASSIGNMENT -> . ASIGVE
    (44) CALLFUNCTION -> . ID LPAREN RPAREN PUNTOCOMA
    (20) IFCALL -> . IF E AUXIF1 DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA
    (26) WHILECALL -> . WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA
    (30) DOWHILECALL -> . DO DOSPUNTOS DOAUX B LOOP E DOAUX1 END PUNTOCOMA
    (33) FORCALL -> . FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA
    (40) WRITECALL -> . WRITE LPAREN AUXESCRIBE RPAREN PUNTOCOMA
    (43) READCALL -> . ID IGUAL READ LPAREN RPAREN PUNTOCOMA
    (50) ASIGANCION -> . ID IGUAL E PUNTOCOMA
    (51) ASIGPLUS -> . ID PLUSPLUS PUNTOCOMA
    (52) ASIGMIN -> . ID MINMIN PUNTOCOMA
    (49) ASIGVE -> . DIMENSION IGUAL E PUNTOCOMA
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    ID              shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 52
    DO              shift and go to state 53
    FOR             shift and go to state 54
    WRITE           shift and go to state 55

    B                              shift and go to state 137
    SPE                            shift and go to state 37
    ASSIGNMENT                     shift and go to state 38
    CALLFUNCTION                   shift and go to state 39
    IFCALL                         shift and go to state 40
    WHILECALL                      shift and go to state 41
    DOWHILECALL                    shift and go to state 42
    FORCALL                        shift and go to state 43
    WRITECALL                      shift and go to state 44
    READCALL                       shift and go to state 45
    ASIGANCION                     shift and go to state 46
    ASIGPLUS                       shift and go to state 47
    ASIGMIN                        shift and go to state 48
    ASIGVE                         shift and go to state 49
    DIMENSION                      shift and go to state 56

state 109

    (33) FORCALL -> FOR IDAUX IGUAL . YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA
    (70) YONE -> . DIMENSION
    (71) YONE -> . CONDOUBLE
    (72) YONE -> . ID
    (73) YONE -> . CONSTANTE
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    CONDOUBLE       shift and go to state 72
    ID              shift and go to state 73
    CONSTANTE       shift and go to state 74

    YONE                           shift and go to state 138
    DIMENSION                      shift and go to state 71

state 110

    (40) WRITECALL -> WRITE LPAREN AUXESCRIBE . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 139


state 111

    (41) AUXESCRIBE -> E .
    (53) E -> E . PLUS term
    (54) E -> E . MINUS term
    (55) E -> E . OR term

    RPAREN          reduce using rule 41 (AUXESCRIBE -> E .)
    PLUS            shift and go to state 93
    MINUS           shift and go to state 94
    OR              shift and go to state 95


state 112

    (42) AUXESCRIBE -> STRING .

    RPAREN          reduce using rule 42 (AUXESCRIBE -> STRING .)


state 113

    (49) ASIGVE -> DIMENSION IGUAL E . PUNTOCOMA
    (53) E -> E . PLUS term
    (54) E -> E . MINUS term
    (55) E -> E . OR term

    PUNTOCOMA       shift and go to state 140
    PLUS            shift and go to state 93
    MINUS           shift and go to state 94
    OR              shift and go to state 95


state 114

    (78) PRINCIPAL -> MAIN LPAREN RPAREN DOSPUNTOS MAINAUX B ENDF FINMAIN .

    $end            reduce using rule 78 (PRINCIPAL -> MAIN LPAREN RPAREN DOSPUNTOS MAINAUX B ENDF FINMAIN .)


state 115

    (80) FINMAIN -> PUNTOCOMA .

    $end            reduce using rule 80 (FINMAIN -> PUNTOCOMA .)


state 116

    (85) MEA -> VOID MEAIN LPAREN RPAREN DOSPUNTOS B ENDF PUNTOCOMA FINMEA . MEA
    (86) MEA -> VOID MEAIN LPAREN RPAREN DOSPUNTOS B ENDF PUNTOCOMA FINMEA .
    (85) MEA -> . VOID MEAIN LPAREN RPAREN DOSPUNTOS B ENDF PUNTOCOMA FINMEA MEA
    (86) MEA -> . VOID MEAIN LPAREN RPAREN DOSPUNTOS B ENDF PUNTOCOMA FINMEA

    MAIN            reduce using rule 86 (MEA -> VOID MEAIN LPAREN RPAREN DOSPUNTOS B ENDF PUNTOCOMA FINMEA .)
    VOID            shift and go to state 10

    MEA                            shift and go to state 141

state 117

    (44) CALLFUNCTION -> ID LPAREN RPAREN PUNTOCOMA .

    ID              reduce using rule 44 (CALLFUNCTION -> ID LPAREN RPAREN PUNTOCOMA .)
    IF              reduce using rule 44 (CALLFUNCTION -> ID LPAREN RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 44 (CALLFUNCTION -> ID LPAREN RPAREN PUNTOCOMA .)
    DO              reduce using rule 44 (CALLFUNCTION -> ID LPAREN RPAREN PUNTOCOMA .)
    FOR             reduce using rule 44 (CALLFUNCTION -> ID LPAREN RPAREN PUNTOCOMA .)
    WRITE           reduce using rule 44 (CALLFUNCTION -> ID LPAREN RPAREN PUNTOCOMA .)
    ENDF            reduce using rule 44 (CALLFUNCTION -> ID LPAREN RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 44 (CALLFUNCTION -> ID LPAREN RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 44 (CALLFUNCTION -> ID LPAREN RPAREN PUNTOCOMA .)
    END             reduce using rule 44 (CALLFUNCTION -> ID LPAREN RPAREN PUNTOCOMA .)


state 118

    (43) READCALL -> ID IGUAL READ LPAREN . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 142


state 119

    (50) ASIGANCION -> ID IGUAL E PUNTOCOMA .

    ID              reduce using rule 50 (ASIGANCION -> ID IGUAL E PUNTOCOMA .)
    IF              reduce using rule 50 (ASIGANCION -> ID IGUAL E PUNTOCOMA .)
    WHILE           reduce using rule 50 (ASIGANCION -> ID IGUAL E PUNTOCOMA .)
    DO              reduce using rule 50 (ASIGANCION -> ID IGUAL E PUNTOCOMA .)
    FOR             reduce using rule 50 (ASIGANCION -> ID IGUAL E PUNTOCOMA .)
    WRITE           reduce using rule 50 (ASIGANCION -> ID IGUAL E PUNTOCOMA .)
    ENDF            reduce using rule 50 (ASIGANCION -> ID IGUAL E PUNTOCOMA .)
    LOOP            reduce using rule 50 (ASIGANCION -> ID IGUAL E PUNTOCOMA .)
    ELSE            reduce using rule 50 (ASIGANCION -> ID IGUAL E PUNTOCOMA .)
    END             reduce using rule 50 (ASIGANCION -> ID IGUAL E PUNTOCOMA .)


state 120

    (74) DIMENSION -> ID LCOR LOCAL RCOR . LCOR LOCAL RCOR
    (75) DIMENSION -> ID LCOR LOCAL RCOR .

    LCOR            shift and go to state 143
    IGUAL           reduce using rule 75 (DIMENSION -> ID LCOR LOCAL RCOR .)
    MAYOR           reduce using rule 75 (DIMENSION -> ID LCOR LOCAL RCOR .)
    MENOR           reduce using rule 75 (DIMENSION -> ID LCOR LOCAL RCOR .)
    MAYORIGUAL      reduce using rule 75 (DIMENSION -> ID LCOR LOCAL RCOR .)
    MENORIGUAL      reduce using rule 75 (DIMENSION -> ID LCOR LOCAL RCOR .)
    EQUAL           reduce using rule 75 (DIMENSION -> ID LCOR LOCAL RCOR .)
    NOTEQUAL        reduce using rule 75 (DIMENSION -> ID LCOR LOCAL RCOR .)
    MULT            reduce using rule 75 (DIMENSION -> ID LCOR LOCAL RCOR .)
    DIVIDE          reduce using rule 75 (DIMENSION -> ID LCOR LOCAL RCOR .)
    MOD             reduce using rule 75 (DIMENSION -> ID LCOR LOCAL RCOR .)
    AND             reduce using rule 75 (DIMENSION -> ID LCOR LOCAL RCOR .)
    PLUS            reduce using rule 75 (DIMENSION -> ID LCOR LOCAL RCOR .)
    MINUS           reduce using rule 75 (DIMENSION -> ID LCOR LOCAL RCOR .)
    OR              reduce using rule 75 (DIMENSION -> ID LCOR LOCAL RCOR .)
    DOSPUNTOS       reduce using rule 75 (DIMENSION -> ID LCOR LOCAL RCOR .)
    PUNTOCOMA       reduce using rule 75 (DIMENSION -> ID LCOR LOCAL RCOR .)
    RPAREN          reduce using rule 75 (DIMENSION -> ID LCOR LOCAL RCOR .)
    END             reduce using rule 75 (DIMENSION -> ID LCOR LOCAL RCOR .)


state 121

    (20) IFCALL -> IF E AUXIF1 DOSPUNTOS . B IFAUX AUXF3 END PUNTOCOMA
    (81) B -> . SPE B
    (82) B -> . SPE
    (12) SPE -> . ASSIGNMENT
    (13) SPE -> . CALLFUNCTION
    (14) SPE -> . IFCALL
    (15) SPE -> . WHILECALL
    (16) SPE -> . DOWHILECALL
    (17) SPE -> . FORCALL
    (18) SPE -> . WRITECALL
    (19) SPE -> . READCALL
    (45) ASSIGNMENT -> . ASIGANCION
    (46) ASSIGNMENT -> . ASIGPLUS
    (47) ASSIGNMENT -> . ASIGMIN
    (48) ASSIGNMENT -> . ASIGVE
    (44) CALLFUNCTION -> . ID LPAREN RPAREN PUNTOCOMA
    (20) IFCALL -> . IF E AUXIF1 DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA
    (26) WHILECALL -> . WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA
    (30) DOWHILECALL -> . DO DOSPUNTOS DOAUX B LOOP E DOAUX1 END PUNTOCOMA
    (33) FORCALL -> . FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA
    (40) WRITECALL -> . WRITE LPAREN AUXESCRIBE RPAREN PUNTOCOMA
    (43) READCALL -> . ID IGUAL READ LPAREN RPAREN PUNTOCOMA
    (50) ASIGANCION -> . ID IGUAL E PUNTOCOMA
    (51) ASIGPLUS -> . ID PLUSPLUS PUNTOCOMA
    (52) ASIGMIN -> . ID MINMIN PUNTOCOMA
    (49) ASIGVE -> . DIMENSION IGUAL E PUNTOCOMA
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    ID              shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 52
    DO              shift and go to state 53
    FOR             shift and go to state 54
    WRITE           shift and go to state 55

    B                              shift and go to state 144
    SPE                            shift and go to state 37
    ASSIGNMENT                     shift and go to state 38
    CALLFUNCTION                   shift and go to state 39
    IFCALL                         shift and go to state 40
    WHILECALL                      shift and go to state 41
    DOWHILECALL                    shift and go to state 42
    FORCALL                        shift and go to state 43
    WRITECALL                      shift and go to state 44
    READCALL                       shift and go to state 45
    ASIGANCION                     shift and go to state 46
    ASIGPLUS                       shift and go to state 47
    ASIGMIN                        shift and go to state 48
    ASIGVE                         shift and go to state 49
    DIMENSION                      shift and go to state 56

state 122

    (53) E -> E PLUS term .
    (57) term -> term . MULT factor
    (58) term -> term . DIVIDE factor
    (59) term -> term . MOD factor
    (60) term -> term . AND factor

    PLUS            reduce using rule 53 (E -> E PLUS term .)
    MINUS           reduce using rule 53 (E -> E PLUS term .)
    OR              reduce using rule 53 (E -> E PLUS term .)
    DOSPUNTOS       reduce using rule 53 (E -> E PLUS term .)
    PUNTOCOMA       reduce using rule 53 (E -> E PLUS term .)
    RPAREN          reduce using rule 53 (E -> E PLUS term .)
    END             reduce using rule 53 (E -> E PLUS term .)
    MULT            shift and go to state 96
    DIVIDE          shift and go to state 97
    MOD             shift and go to state 98
    AND             shift and go to state 99


state 123

    (54) E -> E MINUS term .
    (57) term -> term . MULT factor
    (58) term -> term . DIVIDE factor
    (59) term -> term . MOD factor
    (60) term -> term . AND factor

    PLUS            reduce using rule 54 (E -> E MINUS term .)
    MINUS           reduce using rule 54 (E -> E MINUS term .)
    OR              reduce using rule 54 (E -> E MINUS term .)
    DOSPUNTOS       reduce using rule 54 (E -> E MINUS term .)
    PUNTOCOMA       reduce using rule 54 (E -> E MINUS term .)
    RPAREN          reduce using rule 54 (E -> E MINUS term .)
    END             reduce using rule 54 (E -> E MINUS term .)
    MULT            shift and go to state 96
    DIVIDE          shift and go to state 97
    MOD             shift and go to state 98
    AND             shift and go to state 99


state 124

    (55) E -> E OR term .
    (57) term -> term . MULT factor
    (58) term -> term . DIVIDE factor
    (59) term -> term . MOD factor
    (60) term -> term . AND factor

    PLUS            reduce using rule 55 (E -> E OR term .)
    MINUS           reduce using rule 55 (E -> E OR term .)
    OR              reduce using rule 55 (E -> E OR term .)
    DOSPUNTOS       reduce using rule 55 (E -> E OR term .)
    PUNTOCOMA       reduce using rule 55 (E -> E OR term .)
    RPAREN          reduce using rule 55 (E -> E OR term .)
    END             reduce using rule 55 (E -> E OR term .)
    MULT            shift and go to state 96
    DIVIDE          shift and go to state 97
    MOD             shift and go to state 98
    AND             shift and go to state 99


state 125

    (57) term -> term MULT factor .

    MULT            reduce using rule 57 (term -> term MULT factor .)
    DIVIDE          reduce using rule 57 (term -> term MULT factor .)
    MOD             reduce using rule 57 (term -> term MULT factor .)
    AND             reduce using rule 57 (term -> term MULT factor .)
    PLUS            reduce using rule 57 (term -> term MULT factor .)
    MINUS           reduce using rule 57 (term -> term MULT factor .)
    OR              reduce using rule 57 (term -> term MULT factor .)
    DOSPUNTOS       reduce using rule 57 (term -> term MULT factor .)
    PUNTOCOMA       reduce using rule 57 (term -> term MULT factor .)
    RPAREN          reduce using rule 57 (term -> term MULT factor .)
    END             reduce using rule 57 (term -> term MULT factor .)


state 126

    (58) term -> term DIVIDE factor .

    MULT            reduce using rule 58 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 58 (term -> term DIVIDE factor .)
    MOD             reduce using rule 58 (term -> term DIVIDE factor .)
    AND             reduce using rule 58 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 58 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 58 (term -> term DIVIDE factor .)
    OR              reduce using rule 58 (term -> term DIVIDE factor .)
    DOSPUNTOS       reduce using rule 58 (term -> term DIVIDE factor .)
    PUNTOCOMA       reduce using rule 58 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 58 (term -> term DIVIDE factor .)
    END             reduce using rule 58 (term -> term DIVIDE factor .)


state 127

    (59) term -> term MOD factor .

    MULT            reduce using rule 59 (term -> term MOD factor .)
    DIVIDE          reduce using rule 59 (term -> term MOD factor .)
    MOD             reduce using rule 59 (term -> term MOD factor .)
    AND             reduce using rule 59 (term -> term MOD factor .)
    PLUS            reduce using rule 59 (term -> term MOD factor .)
    MINUS           reduce using rule 59 (term -> term MOD factor .)
    OR              reduce using rule 59 (term -> term MOD factor .)
    DOSPUNTOS       reduce using rule 59 (term -> term MOD factor .)
    PUNTOCOMA       reduce using rule 59 (term -> term MOD factor .)
    RPAREN          reduce using rule 59 (term -> term MOD factor .)
    END             reduce using rule 59 (term -> term MOD factor .)


state 128

    (60) term -> term AND factor .

    MULT            reduce using rule 60 (term -> term AND factor .)
    DIVIDE          reduce using rule 60 (term -> term AND factor .)
    MOD             reduce using rule 60 (term -> term AND factor .)
    AND             reduce using rule 60 (term -> term AND factor .)
    PLUS            reduce using rule 60 (term -> term AND factor .)
    MINUS           reduce using rule 60 (term -> term AND factor .)
    OR              reduce using rule 60 (term -> term AND factor .)
    DOSPUNTOS       reduce using rule 60 (term -> term AND factor .)
    PUNTOCOMA       reduce using rule 60 (term -> term AND factor .)
    RPAREN          reduce using rule 60 (term -> term AND factor .)
    END             reduce using rule 60 (term -> term AND factor .)


state 129

    (64) factor -> YONE MAYOR YONE .

    MULT            reduce using rule 64 (factor -> YONE MAYOR YONE .)
    DIVIDE          reduce using rule 64 (factor -> YONE MAYOR YONE .)
    MOD             reduce using rule 64 (factor -> YONE MAYOR YONE .)
    AND             reduce using rule 64 (factor -> YONE MAYOR YONE .)
    PLUS            reduce using rule 64 (factor -> YONE MAYOR YONE .)
    MINUS           reduce using rule 64 (factor -> YONE MAYOR YONE .)
    OR              reduce using rule 64 (factor -> YONE MAYOR YONE .)
    DOSPUNTOS       reduce using rule 64 (factor -> YONE MAYOR YONE .)
    PUNTOCOMA       reduce using rule 64 (factor -> YONE MAYOR YONE .)
    RPAREN          reduce using rule 64 (factor -> YONE MAYOR YONE .)
    END             reduce using rule 64 (factor -> YONE MAYOR YONE .)


state 130

    (65) factor -> YONE MENOR YONE .

    MULT            reduce using rule 65 (factor -> YONE MENOR YONE .)
    DIVIDE          reduce using rule 65 (factor -> YONE MENOR YONE .)
    MOD             reduce using rule 65 (factor -> YONE MENOR YONE .)
    AND             reduce using rule 65 (factor -> YONE MENOR YONE .)
    PLUS            reduce using rule 65 (factor -> YONE MENOR YONE .)
    MINUS           reduce using rule 65 (factor -> YONE MENOR YONE .)
    OR              reduce using rule 65 (factor -> YONE MENOR YONE .)
    DOSPUNTOS       reduce using rule 65 (factor -> YONE MENOR YONE .)
    PUNTOCOMA       reduce using rule 65 (factor -> YONE MENOR YONE .)
    RPAREN          reduce using rule 65 (factor -> YONE MENOR YONE .)
    END             reduce using rule 65 (factor -> YONE MENOR YONE .)


state 131

    (66) factor -> YONE MAYORIGUAL YONE .

    MULT            reduce using rule 66 (factor -> YONE MAYORIGUAL YONE .)
    DIVIDE          reduce using rule 66 (factor -> YONE MAYORIGUAL YONE .)
    MOD             reduce using rule 66 (factor -> YONE MAYORIGUAL YONE .)
    AND             reduce using rule 66 (factor -> YONE MAYORIGUAL YONE .)
    PLUS            reduce using rule 66 (factor -> YONE MAYORIGUAL YONE .)
    MINUS           reduce using rule 66 (factor -> YONE MAYORIGUAL YONE .)
    OR              reduce using rule 66 (factor -> YONE MAYORIGUAL YONE .)
    DOSPUNTOS       reduce using rule 66 (factor -> YONE MAYORIGUAL YONE .)
    PUNTOCOMA       reduce using rule 66 (factor -> YONE MAYORIGUAL YONE .)
    RPAREN          reduce using rule 66 (factor -> YONE MAYORIGUAL YONE .)
    END             reduce using rule 66 (factor -> YONE MAYORIGUAL YONE .)


state 132

    (67) factor -> YONE MENORIGUAL YONE .

    MULT            reduce using rule 67 (factor -> YONE MENORIGUAL YONE .)
    DIVIDE          reduce using rule 67 (factor -> YONE MENORIGUAL YONE .)
    MOD             reduce using rule 67 (factor -> YONE MENORIGUAL YONE .)
    AND             reduce using rule 67 (factor -> YONE MENORIGUAL YONE .)
    PLUS            reduce using rule 67 (factor -> YONE MENORIGUAL YONE .)
    MINUS           reduce using rule 67 (factor -> YONE MENORIGUAL YONE .)
    OR              reduce using rule 67 (factor -> YONE MENORIGUAL YONE .)
    DOSPUNTOS       reduce using rule 67 (factor -> YONE MENORIGUAL YONE .)
    PUNTOCOMA       reduce using rule 67 (factor -> YONE MENORIGUAL YONE .)
    RPAREN          reduce using rule 67 (factor -> YONE MENORIGUAL YONE .)
    END             reduce using rule 67 (factor -> YONE MENORIGUAL YONE .)


state 133

    (68) factor -> YONE EQUAL YONE .

    MULT            reduce using rule 68 (factor -> YONE EQUAL YONE .)
    DIVIDE          reduce using rule 68 (factor -> YONE EQUAL YONE .)
    MOD             reduce using rule 68 (factor -> YONE EQUAL YONE .)
    AND             reduce using rule 68 (factor -> YONE EQUAL YONE .)
    PLUS            reduce using rule 68 (factor -> YONE EQUAL YONE .)
    MINUS           reduce using rule 68 (factor -> YONE EQUAL YONE .)
    OR              reduce using rule 68 (factor -> YONE EQUAL YONE .)
    DOSPUNTOS       reduce using rule 68 (factor -> YONE EQUAL YONE .)
    PUNTOCOMA       reduce using rule 68 (factor -> YONE EQUAL YONE .)
    RPAREN          reduce using rule 68 (factor -> YONE EQUAL YONE .)
    END             reduce using rule 68 (factor -> YONE EQUAL YONE .)


state 134

    (69) factor -> YONE NOTEQUAL YONE .

    MULT            reduce using rule 69 (factor -> YONE NOTEQUAL YONE .)
    DIVIDE          reduce using rule 69 (factor -> YONE NOTEQUAL YONE .)
    MOD             reduce using rule 69 (factor -> YONE NOTEQUAL YONE .)
    AND             reduce using rule 69 (factor -> YONE NOTEQUAL YONE .)
    PLUS            reduce using rule 69 (factor -> YONE NOTEQUAL YONE .)
    MINUS           reduce using rule 69 (factor -> YONE NOTEQUAL YONE .)
    OR              reduce using rule 69 (factor -> YONE NOTEQUAL YONE .)
    DOSPUNTOS       reduce using rule 69 (factor -> YONE NOTEQUAL YONE .)
    PUNTOCOMA       reduce using rule 69 (factor -> YONE NOTEQUAL YONE .)
    RPAREN          reduce using rule 69 (factor -> YONE NOTEQUAL YONE .)
    END             reduce using rule 69 (factor -> YONE NOTEQUAL YONE .)


state 135

    (63) factor -> LPAREN E RPAREN .

    MULT            reduce using rule 63 (factor -> LPAREN E RPAREN .)
    DIVIDE          reduce using rule 63 (factor -> LPAREN E RPAREN .)
    MOD             reduce using rule 63 (factor -> LPAREN E RPAREN .)
    AND             reduce using rule 63 (factor -> LPAREN E RPAREN .)
    PLUS            reduce using rule 63 (factor -> LPAREN E RPAREN .)
    MINUS           reduce using rule 63 (factor -> LPAREN E RPAREN .)
    OR              reduce using rule 63 (factor -> LPAREN E RPAREN .)
    DOSPUNTOS       reduce using rule 63 (factor -> LPAREN E RPAREN .)
    PUNTOCOMA       reduce using rule 63 (factor -> LPAREN E RPAREN .)
    RPAREN          reduce using rule 63 (factor -> LPAREN E RPAREN .)
    END             reduce using rule 63 (factor -> LPAREN E RPAREN .)


state 136

    (26) WHILECALL -> WHILE WHILEAUX E WHILEAUX1 . DOSPUNTOS B WHILEAUX2 END PUNTOCOMA

    DOSPUNTOS       shift and go to state 145


state 137

    (30) DOWHILECALL -> DO DOSPUNTOS DOAUX B . LOOP E DOAUX1 END PUNTOCOMA

    LOOP            shift and go to state 146


state 138

    (33) FORCALL -> FOR IDAUX IGUAL YONE . IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA
    (38) IFOR -> .

    PUNTOCOMA       reduce using rule 38 (IFOR -> .)

    IFOR                           shift and go to state 147

state 139

    (40) WRITECALL -> WRITE LPAREN AUXESCRIBE RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 148


state 140

    (49) ASIGVE -> DIMENSION IGUAL E PUNTOCOMA .

    ID              reduce using rule 49 (ASIGVE -> DIMENSION IGUAL E PUNTOCOMA .)
    IF              reduce using rule 49 (ASIGVE -> DIMENSION IGUAL E PUNTOCOMA .)
    WHILE           reduce using rule 49 (ASIGVE -> DIMENSION IGUAL E PUNTOCOMA .)
    DO              reduce using rule 49 (ASIGVE -> DIMENSION IGUAL E PUNTOCOMA .)
    FOR             reduce using rule 49 (ASIGVE -> DIMENSION IGUAL E PUNTOCOMA .)
    WRITE           reduce using rule 49 (ASIGVE -> DIMENSION IGUAL E PUNTOCOMA .)
    ENDF            reduce using rule 49 (ASIGVE -> DIMENSION IGUAL E PUNTOCOMA .)
    LOOP            reduce using rule 49 (ASIGVE -> DIMENSION IGUAL E PUNTOCOMA .)
    ELSE            reduce using rule 49 (ASIGVE -> DIMENSION IGUAL E PUNTOCOMA .)
    END             reduce using rule 49 (ASIGVE -> DIMENSION IGUAL E PUNTOCOMA .)


state 141

    (85) MEA -> VOID MEAIN LPAREN RPAREN DOSPUNTOS B ENDF PUNTOCOMA FINMEA MEA .

    MAIN            reduce using rule 85 (MEA -> VOID MEAIN LPAREN RPAREN DOSPUNTOS B ENDF PUNTOCOMA FINMEA MEA .)


state 142

    (43) READCALL -> ID IGUAL READ LPAREN RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 149


state 143

    (74) DIMENSION -> ID LCOR LOCAL RCOR LCOR . LOCAL RCOR
    (76) LOCAL -> . ID
    (77) LOCAL -> . CONSTANTE

    ID              shift and go to state 89
    CONSTANTE       shift and go to state 91

    LOCAL                          shift and go to state 150

state 144

    (20) IFCALL -> IF E AUXIF1 DOSPUNTOS B . IFAUX AUXF3 END PUNTOCOMA
    (21) IFAUX -> . ELSE AUXF2 DOSPUNTOS B END PUNTOCOMA
    (22) IFAUX -> .

    ELSE            shift and go to state 152
    END             reduce using rule 22 (IFAUX -> .)

    IFAUX                          shift and go to state 151

state 145

    (26) WHILECALL -> WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS . B WHILEAUX2 END PUNTOCOMA
    (81) B -> . SPE B
    (82) B -> . SPE
    (12) SPE -> . ASSIGNMENT
    (13) SPE -> . CALLFUNCTION
    (14) SPE -> . IFCALL
    (15) SPE -> . WHILECALL
    (16) SPE -> . DOWHILECALL
    (17) SPE -> . FORCALL
    (18) SPE -> . WRITECALL
    (19) SPE -> . READCALL
    (45) ASSIGNMENT -> . ASIGANCION
    (46) ASSIGNMENT -> . ASIGPLUS
    (47) ASSIGNMENT -> . ASIGMIN
    (48) ASSIGNMENT -> . ASIGVE
    (44) CALLFUNCTION -> . ID LPAREN RPAREN PUNTOCOMA
    (20) IFCALL -> . IF E AUXIF1 DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA
    (26) WHILECALL -> . WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA
    (30) DOWHILECALL -> . DO DOSPUNTOS DOAUX B LOOP E DOAUX1 END PUNTOCOMA
    (33) FORCALL -> . FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA
    (40) WRITECALL -> . WRITE LPAREN AUXESCRIBE RPAREN PUNTOCOMA
    (43) READCALL -> . ID IGUAL READ LPAREN RPAREN PUNTOCOMA
    (50) ASIGANCION -> . ID IGUAL E PUNTOCOMA
    (51) ASIGPLUS -> . ID PLUSPLUS PUNTOCOMA
    (52) ASIGMIN -> . ID MINMIN PUNTOCOMA
    (49) ASIGVE -> . DIMENSION IGUAL E PUNTOCOMA
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    ID              shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 52
    DO              shift and go to state 53
    FOR             shift and go to state 54
    WRITE           shift and go to state 55

    B                              shift and go to state 153
    SPE                            shift and go to state 37
    ASSIGNMENT                     shift and go to state 38
    CALLFUNCTION                   shift and go to state 39
    IFCALL                         shift and go to state 40
    WHILECALL                      shift and go to state 41
    DOWHILECALL                    shift and go to state 42
    FORCALL                        shift and go to state 43
    WRITECALL                      shift and go to state 44
    READCALL                       shift and go to state 45
    ASIGANCION                     shift and go to state 46
    ASIGPLUS                       shift and go to state 47
    ASIGMIN                        shift and go to state 48
    ASIGVE                         shift and go to state 49
    DIMENSION                      shift and go to state 56

state 146

    (30) DOWHILECALL -> DO DOSPUNTOS DOAUX B LOOP . E DOAUX1 END PUNTOCOMA
    (53) E -> . E PLUS term
    (54) E -> . E MINUS term
    (55) E -> . E OR term
    (56) E -> . term
    (57) term -> . term MULT factor
    (58) term -> . term DIVIDE factor
    (59) term -> . term MOD factor
    (60) term -> . term AND factor
    (61) term -> . factor
    (62) factor -> . YONE
    (63) factor -> . LPAREN E RPAREN
    (64) factor -> . YONE MAYOR YONE
    (65) factor -> . YONE MENOR YONE
    (66) factor -> . YONE MAYORIGUAL YONE
    (67) factor -> . YONE MENORIGUAL YONE
    (68) factor -> . YONE EQUAL YONE
    (69) factor -> . YONE NOTEQUAL YONE
    (70) YONE -> . DIMENSION
    (71) YONE -> . CONDOUBLE
    (72) YONE -> . ID
    (73) YONE -> . CONSTANTE
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    LPAREN          shift and go to state 70
    CONDOUBLE       shift and go to state 72
    ID              shift and go to state 73
    CONSTANTE       shift and go to state 74

    E                              shift and go to state 154
    term                           shift and go to state 67
    factor                         shift and go to state 68
    YONE                           shift and go to state 69
    DIMENSION                      shift and go to state 71

state 147

    (33) FORCALL -> FOR IDAUX IGUAL YONE IFOR . PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA

    PUNTOCOMA       shift and go to state 155


state 148

    (40) WRITECALL -> WRITE LPAREN AUXESCRIBE RPAREN PUNTOCOMA .

    ID              reduce using rule 40 (WRITECALL -> WRITE LPAREN AUXESCRIBE RPAREN PUNTOCOMA .)
    IF              reduce using rule 40 (WRITECALL -> WRITE LPAREN AUXESCRIBE RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 40 (WRITECALL -> WRITE LPAREN AUXESCRIBE RPAREN PUNTOCOMA .)
    DO              reduce using rule 40 (WRITECALL -> WRITE LPAREN AUXESCRIBE RPAREN PUNTOCOMA .)
    FOR             reduce using rule 40 (WRITECALL -> WRITE LPAREN AUXESCRIBE RPAREN PUNTOCOMA .)
    WRITE           reduce using rule 40 (WRITECALL -> WRITE LPAREN AUXESCRIBE RPAREN PUNTOCOMA .)
    ENDF            reduce using rule 40 (WRITECALL -> WRITE LPAREN AUXESCRIBE RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 40 (WRITECALL -> WRITE LPAREN AUXESCRIBE RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 40 (WRITECALL -> WRITE LPAREN AUXESCRIBE RPAREN PUNTOCOMA .)
    END             reduce using rule 40 (WRITECALL -> WRITE LPAREN AUXESCRIBE RPAREN PUNTOCOMA .)


state 149

    (43) READCALL -> ID IGUAL READ LPAREN RPAREN PUNTOCOMA .

    ID              reduce using rule 43 (READCALL -> ID IGUAL READ LPAREN RPAREN PUNTOCOMA .)
    IF              reduce using rule 43 (READCALL -> ID IGUAL READ LPAREN RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 43 (READCALL -> ID IGUAL READ LPAREN RPAREN PUNTOCOMA .)
    DO              reduce using rule 43 (READCALL -> ID IGUAL READ LPAREN RPAREN PUNTOCOMA .)
    FOR             reduce using rule 43 (READCALL -> ID IGUAL READ LPAREN RPAREN PUNTOCOMA .)
    WRITE           reduce using rule 43 (READCALL -> ID IGUAL READ LPAREN RPAREN PUNTOCOMA .)
    ENDF            reduce using rule 43 (READCALL -> ID IGUAL READ LPAREN RPAREN PUNTOCOMA .)
    LOOP            reduce using rule 43 (READCALL -> ID IGUAL READ LPAREN RPAREN PUNTOCOMA .)
    ELSE            reduce using rule 43 (READCALL -> ID IGUAL READ LPAREN RPAREN PUNTOCOMA .)
    END             reduce using rule 43 (READCALL -> ID IGUAL READ LPAREN RPAREN PUNTOCOMA .)


state 150

    (74) DIMENSION -> ID LCOR LOCAL RCOR LCOR LOCAL . RCOR

    RCOR            shift and go to state 156


state 151

    (20) IFCALL -> IF E AUXIF1 DOSPUNTOS B IFAUX . AUXF3 END PUNTOCOMA
    (23) AUXF3 -> .

    END             reduce using rule 23 (AUXF3 -> .)

    AUXF3                          shift and go to state 157

state 152

    (21) IFAUX -> ELSE . AUXF2 DOSPUNTOS B END PUNTOCOMA
    (24) AUXF2 -> .

    DOSPUNTOS       reduce using rule 24 (AUXF2 -> .)

    AUXF2                          shift and go to state 158

state 153

    (26) WHILECALL -> WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B . WHILEAUX2 END PUNTOCOMA
    (29) WHILEAUX2 -> .

    END             reduce using rule 29 (WHILEAUX2 -> .)

    WHILEAUX2                      shift and go to state 159

state 154

    (30) DOWHILECALL -> DO DOSPUNTOS DOAUX B LOOP E . DOAUX1 END PUNTOCOMA
    (53) E -> E . PLUS term
    (54) E -> E . MINUS term
    (55) E -> E . OR term
    (32) DOAUX1 -> .

    PLUS            shift and go to state 93
    MINUS           shift and go to state 94
    OR              shift and go to state 95
    END             reduce using rule 32 (DOAUX1 -> .)

    DOAUX1                         shift and go to state 160

state 155

    (33) FORCALL -> FOR IDAUX IGUAL YONE IFOR PUNTOCOMA . FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA
    (39) FDIR -> .

    LPAREN          reduce using rule 39 (FDIR -> .)
    CONDOUBLE       reduce using rule 39 (FDIR -> .)
    ID              reduce using rule 39 (FDIR -> .)
    CONSTANTE       reduce using rule 39 (FDIR -> .)

    FDIR                           shift and go to state 161

state 156

    (74) DIMENSION -> ID LCOR LOCAL RCOR LCOR LOCAL RCOR .

    IGUAL           reduce using rule 74 (DIMENSION -> ID LCOR LOCAL RCOR LCOR LOCAL RCOR .)
    MAYOR           reduce using rule 74 (DIMENSION -> ID LCOR LOCAL RCOR LCOR LOCAL RCOR .)
    MENOR           reduce using rule 74 (DIMENSION -> ID LCOR LOCAL RCOR LCOR LOCAL RCOR .)
    MAYORIGUAL      reduce using rule 74 (DIMENSION -> ID LCOR LOCAL RCOR LCOR LOCAL RCOR .)
    MENORIGUAL      reduce using rule 74 (DIMENSION -> ID LCOR LOCAL RCOR LCOR LOCAL RCOR .)
    EQUAL           reduce using rule 74 (DIMENSION -> ID LCOR LOCAL RCOR LCOR LOCAL RCOR .)
    NOTEQUAL        reduce using rule 74 (DIMENSION -> ID LCOR LOCAL RCOR LCOR LOCAL RCOR .)
    MULT            reduce using rule 74 (DIMENSION -> ID LCOR LOCAL RCOR LCOR LOCAL RCOR .)
    DIVIDE          reduce using rule 74 (DIMENSION -> ID LCOR LOCAL RCOR LCOR LOCAL RCOR .)
    MOD             reduce using rule 74 (DIMENSION -> ID LCOR LOCAL RCOR LCOR LOCAL RCOR .)
    AND             reduce using rule 74 (DIMENSION -> ID LCOR LOCAL RCOR LCOR LOCAL RCOR .)
    PLUS            reduce using rule 74 (DIMENSION -> ID LCOR LOCAL RCOR LCOR LOCAL RCOR .)
    MINUS           reduce using rule 74 (DIMENSION -> ID LCOR LOCAL RCOR LCOR LOCAL RCOR .)
    OR              reduce using rule 74 (DIMENSION -> ID LCOR LOCAL RCOR LCOR LOCAL RCOR .)
    DOSPUNTOS       reduce using rule 74 (DIMENSION -> ID LCOR LOCAL RCOR LCOR LOCAL RCOR .)
    PUNTOCOMA       reduce using rule 74 (DIMENSION -> ID LCOR LOCAL RCOR LCOR LOCAL RCOR .)
    RPAREN          reduce using rule 74 (DIMENSION -> ID LCOR LOCAL RCOR LCOR LOCAL RCOR .)
    END             reduce using rule 74 (DIMENSION -> ID LCOR LOCAL RCOR LCOR LOCAL RCOR .)


state 157

    (20) IFCALL -> IF E AUXIF1 DOSPUNTOS B IFAUX AUXF3 . END PUNTOCOMA

    END             shift and go to state 162


state 158

    (21) IFAUX -> ELSE AUXF2 . DOSPUNTOS B END PUNTOCOMA

    DOSPUNTOS       shift and go to state 163


state 159

    (26) WHILECALL -> WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 . END PUNTOCOMA

    END             shift and go to state 164


state 160

    (30) DOWHILECALL -> DO DOSPUNTOS DOAUX B LOOP E DOAUX1 . END PUNTOCOMA

    END             shift and go to state 165


state 161

    (33) FORCALL -> FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR . E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA
    (53) E -> . E PLUS term
    (54) E -> . E MINUS term
    (55) E -> . E OR term
    (56) E -> . term
    (57) term -> . term MULT factor
    (58) term -> . term DIVIDE factor
    (59) term -> . term MOD factor
    (60) term -> . term AND factor
    (61) term -> . factor
    (62) factor -> . YONE
    (63) factor -> . LPAREN E RPAREN
    (64) factor -> . YONE MAYOR YONE
    (65) factor -> . YONE MENOR YONE
    (66) factor -> . YONE MAYORIGUAL YONE
    (67) factor -> . YONE MENORIGUAL YONE
    (68) factor -> . YONE EQUAL YONE
    (69) factor -> . YONE NOTEQUAL YONE
    (70) YONE -> . DIMENSION
    (71) YONE -> . CONDOUBLE
    (72) YONE -> . ID
    (73) YONE -> . CONSTANTE
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    LPAREN          shift and go to state 70
    CONDOUBLE       shift and go to state 72
    ID              shift and go to state 73
    CONSTANTE       shift and go to state 74

    YONE                           shift and go to state 69
    E                              shift and go to state 166
    term                           shift and go to state 67
    factor                         shift and go to state 68
    DIMENSION                      shift and go to state 71

state 162

    (20) IFCALL -> IF E AUXIF1 DOSPUNTOS B IFAUX AUXF3 END . PUNTOCOMA

    PUNTOCOMA       shift and go to state 167


state 163

    (21) IFAUX -> ELSE AUXF2 DOSPUNTOS . B END PUNTOCOMA
    (81) B -> . SPE B
    (82) B -> . SPE
    (12) SPE -> . ASSIGNMENT
    (13) SPE -> . CALLFUNCTION
    (14) SPE -> . IFCALL
    (15) SPE -> . WHILECALL
    (16) SPE -> . DOWHILECALL
    (17) SPE -> . FORCALL
    (18) SPE -> . WRITECALL
    (19) SPE -> . READCALL
    (45) ASSIGNMENT -> . ASIGANCION
    (46) ASSIGNMENT -> . ASIGPLUS
    (47) ASSIGNMENT -> . ASIGMIN
    (48) ASSIGNMENT -> . ASIGVE
    (44) CALLFUNCTION -> . ID LPAREN RPAREN PUNTOCOMA
    (20) IFCALL -> . IF E AUXIF1 DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA
    (26) WHILECALL -> . WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA
    (30) DOWHILECALL -> . DO DOSPUNTOS DOAUX B LOOP E DOAUX1 END PUNTOCOMA
    (33) FORCALL -> . FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA
    (40) WRITECALL -> . WRITE LPAREN AUXESCRIBE RPAREN PUNTOCOMA
    (43) READCALL -> . ID IGUAL READ LPAREN RPAREN PUNTOCOMA
    (50) ASIGANCION -> . ID IGUAL E PUNTOCOMA
    (51) ASIGPLUS -> . ID PLUSPLUS PUNTOCOMA
    (52) ASIGMIN -> . ID MINMIN PUNTOCOMA
    (49) ASIGVE -> . DIMENSION IGUAL E PUNTOCOMA
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    ID              shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 52
    DO              shift and go to state 53
    FOR             shift and go to state 54
    WRITE           shift and go to state 55

    B                              shift and go to state 168
    SPE                            shift and go to state 37
    ASSIGNMENT                     shift and go to state 38
    CALLFUNCTION                   shift and go to state 39
    IFCALL                         shift and go to state 40
    WHILECALL                      shift and go to state 41
    DOWHILECALL                    shift and go to state 42
    FORCALL                        shift and go to state 43
    WRITECALL                      shift and go to state 44
    READCALL                       shift and go to state 45
    ASIGANCION                     shift and go to state 46
    ASIGPLUS                       shift and go to state 47
    ASIGMIN                        shift and go to state 48
    ASIGVE                         shift and go to state 49
    DIMENSION                      shift and go to state 56

state 164

    (26) WHILECALL -> WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END . PUNTOCOMA

    PUNTOCOMA       shift and go to state 169


state 165

    (30) DOWHILECALL -> DO DOSPUNTOS DOAUX B LOOP E DOAUX1 END . PUNTOCOMA

    PUNTOCOMA       shift and go to state 170


state 166

    (33) FORCALL -> FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E . FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA
    (53) E -> E . PLUS term
    (54) E -> E . MINUS term
    (55) E -> E . OR term
    (36) FSAL -> .

    PLUS            shift and go to state 93
    MINUS           shift and go to state 94
    OR              shift and go to state 95
    PUNTOCOMA       reduce using rule 36 (FSAL -> .)

    FSAL                           shift and go to state 171

state 167

    (20) IFCALL -> IF E AUXIF1 DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA .

    ID              reduce using rule 20 (IFCALL -> IF E AUXIF1 DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA .)
    IF              reduce using rule 20 (IFCALL -> IF E AUXIF1 DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA .)
    WHILE           reduce using rule 20 (IFCALL -> IF E AUXIF1 DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA .)
    DO              reduce using rule 20 (IFCALL -> IF E AUXIF1 DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA .)
    FOR             reduce using rule 20 (IFCALL -> IF E AUXIF1 DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA .)
    WRITE           reduce using rule 20 (IFCALL -> IF E AUXIF1 DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA .)
    ENDF            reduce using rule 20 (IFCALL -> IF E AUXIF1 DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA .)
    LOOP            reduce using rule 20 (IFCALL -> IF E AUXIF1 DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA .)
    ELSE            reduce using rule 20 (IFCALL -> IF E AUXIF1 DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA .)
    END             reduce using rule 20 (IFCALL -> IF E AUXIF1 DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA .)


state 168

    (21) IFAUX -> ELSE AUXF2 DOSPUNTOS B . END PUNTOCOMA

    END             shift and go to state 172


state 169

    (26) WHILECALL -> WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA .

    ID              reduce using rule 26 (WHILECALL -> WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA .)
    IF              reduce using rule 26 (WHILECALL -> WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA .)
    WHILE           reduce using rule 26 (WHILECALL -> WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA .)
    DO              reduce using rule 26 (WHILECALL -> WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA .)
    FOR             reduce using rule 26 (WHILECALL -> WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA .)
    WRITE           reduce using rule 26 (WHILECALL -> WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA .)
    ENDF            reduce using rule 26 (WHILECALL -> WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA .)
    LOOP            reduce using rule 26 (WHILECALL -> WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA .)
    ELSE            reduce using rule 26 (WHILECALL -> WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA .)
    END             reduce using rule 26 (WHILECALL -> WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA .)


state 170

    (30) DOWHILECALL -> DO DOSPUNTOS DOAUX B LOOP E DOAUX1 END PUNTOCOMA .

    ID              reduce using rule 30 (DOWHILECALL -> DO DOSPUNTOS DOAUX B LOOP E DOAUX1 END PUNTOCOMA .)
    IF              reduce using rule 30 (DOWHILECALL -> DO DOSPUNTOS DOAUX B LOOP E DOAUX1 END PUNTOCOMA .)
    WHILE           reduce using rule 30 (DOWHILECALL -> DO DOSPUNTOS DOAUX B LOOP E DOAUX1 END PUNTOCOMA .)
    DO              reduce using rule 30 (DOWHILECALL -> DO DOSPUNTOS DOAUX B LOOP E DOAUX1 END PUNTOCOMA .)
    FOR             reduce using rule 30 (DOWHILECALL -> DO DOSPUNTOS DOAUX B LOOP E DOAUX1 END PUNTOCOMA .)
    WRITE           reduce using rule 30 (DOWHILECALL -> DO DOSPUNTOS DOAUX B LOOP E DOAUX1 END PUNTOCOMA .)
    ENDF            reduce using rule 30 (DOWHILECALL -> DO DOSPUNTOS DOAUX B LOOP E DOAUX1 END PUNTOCOMA .)
    LOOP            reduce using rule 30 (DOWHILECALL -> DO DOSPUNTOS DOAUX B LOOP E DOAUX1 END PUNTOCOMA .)
    ELSE            reduce using rule 30 (DOWHILECALL -> DO DOSPUNTOS DOAUX B LOOP E DOAUX1 END PUNTOCOMA .)
    END             reduce using rule 30 (DOWHILECALL -> DO DOSPUNTOS DOAUX B LOOP E DOAUX1 END PUNTOCOMA .)


state 171

    (33) FORCALL -> FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL . PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA

    PUNTOCOMA       shift and go to state 173


state 172

    (21) IFAUX -> ELSE AUXF2 DOSPUNTOS B END . PUNTOCOMA

    PUNTOCOMA       shift and go to state 174


state 173

    (33) FORCALL -> FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA . INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA
    (35) INCREMENTO -> . ID PLUSPLUS

    ID              shift and go to state 176

    INCREMENTO                     shift and go to state 175

state 174

    (21) IFAUX -> ELSE AUXF2 DOSPUNTOS B END PUNTOCOMA .

    END             reduce using rule 21 (IFAUX -> ELSE AUXF2 DOSPUNTOS B END PUNTOCOMA .)


state 175

    (33) FORCALL -> FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO . DOSPUNTOS B FAUX END PUNTOCOMA

    DOSPUNTOS       shift and go to state 177


state 176

    (35) INCREMENTO -> ID . PLUSPLUS

    PLUSPLUS        shift and go to state 178


state 177

    (33) FORCALL -> FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS . B FAUX END PUNTOCOMA
    (81) B -> . SPE B
    (82) B -> . SPE
    (12) SPE -> . ASSIGNMENT
    (13) SPE -> . CALLFUNCTION
    (14) SPE -> . IFCALL
    (15) SPE -> . WHILECALL
    (16) SPE -> . DOWHILECALL
    (17) SPE -> . FORCALL
    (18) SPE -> . WRITECALL
    (19) SPE -> . READCALL
    (45) ASSIGNMENT -> . ASIGANCION
    (46) ASSIGNMENT -> . ASIGPLUS
    (47) ASSIGNMENT -> . ASIGMIN
    (48) ASSIGNMENT -> . ASIGVE
    (44) CALLFUNCTION -> . ID LPAREN RPAREN PUNTOCOMA
    (20) IFCALL -> . IF E AUXIF1 DOSPUNTOS B IFAUX AUXF3 END PUNTOCOMA
    (26) WHILECALL -> . WHILE WHILEAUX E WHILEAUX1 DOSPUNTOS B WHILEAUX2 END PUNTOCOMA
    (30) DOWHILECALL -> . DO DOSPUNTOS DOAUX B LOOP E DOAUX1 END PUNTOCOMA
    (33) FORCALL -> . FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA
    (40) WRITECALL -> . WRITE LPAREN AUXESCRIBE RPAREN PUNTOCOMA
    (43) READCALL -> . ID IGUAL READ LPAREN RPAREN PUNTOCOMA
    (50) ASIGANCION -> . ID IGUAL E PUNTOCOMA
    (51) ASIGPLUS -> . ID PLUSPLUS PUNTOCOMA
    (52) ASIGMIN -> . ID MINMIN PUNTOCOMA
    (49) ASIGVE -> . DIMENSION IGUAL E PUNTOCOMA
    (74) DIMENSION -> . ID LCOR LOCAL RCOR LCOR LOCAL RCOR
    (75) DIMENSION -> . ID LCOR LOCAL RCOR

    ID              shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 52
    DO              shift and go to state 53
    FOR             shift and go to state 54
    WRITE           shift and go to state 55

    B                              shift and go to state 179
    SPE                            shift and go to state 37
    ASSIGNMENT                     shift and go to state 38
    CALLFUNCTION                   shift and go to state 39
    IFCALL                         shift and go to state 40
    WHILECALL                      shift and go to state 41
    DOWHILECALL                    shift and go to state 42
    FORCALL                        shift and go to state 43
    WRITECALL                      shift and go to state 44
    READCALL                       shift and go to state 45
    ASIGANCION                     shift and go to state 46
    ASIGPLUS                       shift and go to state 47
    ASIGMIN                        shift and go to state 48
    ASIGVE                         shift and go to state 49
    DIMENSION                      shift and go to state 56

state 178

    (35) INCREMENTO -> ID PLUSPLUS .

    DOSPUNTOS       reduce using rule 35 (INCREMENTO -> ID PLUSPLUS .)


state 179

    (33) FORCALL -> FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B . FAUX END PUNTOCOMA
    (34) FAUX -> .

    END             reduce using rule 34 (FAUX -> .)

    FAUX                           shift and go to state 180

state 180

    (33) FORCALL -> FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX . END PUNTOCOMA

    END             shift and go to state 181


state 181

    (33) FORCALL -> FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END . PUNTOCOMA

    PUNTOCOMA       shift and go to state 182


state 182

    (33) FORCALL -> FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA .

    ID              reduce using rule 33 (FORCALL -> FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA .)
    IF              reduce using rule 33 (FORCALL -> FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA .)
    WHILE           reduce using rule 33 (FORCALL -> FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA .)
    DO              reduce using rule 33 (FORCALL -> FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA .)
    FOR             reduce using rule 33 (FORCALL -> FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA .)
    WRITE           reduce using rule 33 (FORCALL -> FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA .)
    ENDF            reduce using rule 33 (FORCALL -> FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA .)
    LOOP            reduce using rule 33 (FORCALL -> FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA .)
    ELSE            reduce using rule 33 (FORCALL -> FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA .)
    END             reduce using rule 33 (FORCALL -> FOR IDAUX IGUAL YONE IFOR PUNTOCOMA FDIR E FSAL PUNTOCOMA INCREMENTO DOSPUNTOS B FAUX END PUNTOCOMA .)

